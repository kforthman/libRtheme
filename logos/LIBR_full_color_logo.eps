%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 14.0.0%%For: (cubic046) ()%%Title: (LIBR_full_color_logo.eps)%%CreationDate: 1/13/10 12:32 PM%%Canvassize: 16383%%BoundingBox: 60 73 455 148%%HiResBoundingBox: 60.4307 73.4629 454.9463 147.4355%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 252.5 107.5 252.5 107.5%AI3_TileBox: -36 -248 540 486%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 504 216%AI5_RulerUnits: 0%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -205 375 2 1835 917 18 0 0 43 149 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--4 Bn%AI5_BeginGradient: (Unnamed gradient 12)(Unnamed gradient 12) 0 2 Bd[<0000000000000101010101010101010101020202020202020202020202030303030303030303030304040404040404040404040505050505050505050505060606060606060606060606070707070707070707070708080808080808080808080909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F10101010101010101010101111111111111111111111111212121212><CAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECEC>01 %_Br[0.070313 0 0.925781 0 1 50 100 %_BS%_0.070313 0 0.925781 0 1 50 100 Bs0 0.792969 0.964844 0 1 50 0 %_BS%_0 0.792969 0.964844 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 52)(Unnamed gradient 52) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A89888786858483838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39383736353433323231302F2E2D2C2B2A29282726><D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484747464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A0A09080706050403020100><2F2F2F2E2E2E2E2E2E2D2D2D2D2D2D2D2C2C2C2C2C2C2B2B2B2B2B2B2B2A2A2A2A2A2A2A2929292929292828282828282827272727272727262626262626252525252525252424242424242323232323232322222222222222212121212121202020202020201F1F1F1F1F1F1F1E1E1E1E1E1E1D1D1D1D1D1D1D1C1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A1A191919191919191818181818181717171717171716161616161616151515151515141414141414141313131313131312121212121211111111111111101010101010100F0F0F0F0F0F0F0E0E0E0E><0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090909090909090909080808080808080808080808080808080808080807070707070707070707070707070707070707070606060606060606060606060606060606060606050505050505050505050505050505050505050504040404040404040404040404040404040404040303030303030303030303030303030303030303020202020202020202020202020202020202020201010101010101010101010101010101010101010000000000000000000000>1 %_Br[0.148438 0 0.054688 0 1 50 100 %_BS%_0.148438 0 0.054688 0 1 50 100 Bs1 0.835938 0.183594 0.042969 1 49.7559 0 %_BS%_1 0.835938 0.183594 0.042969 1 49.7559 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 8)(Unnamed gradient 8) 0 2 Bd[<2E2E2E2E2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2A2A2A2A2A2A2A2929292929292928282828282827272727272727262626262626252525252525242424242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E1E1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A1919191919191818181818171717171717161616161616151515151515141414141413131313131312121212121211111111111010101010100F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0A0A0A0A0A0A0909090909080808080808070707070706060606060605050505050404040404030303030303020202><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFB><ECECEBEBEAE9E9E8E7E7E6E5E5E4E3E3E2E1E0E0DFDEDDDDDCDBDADAD9D8D7D7D6D5D4D4D3D2D1D0D0CFCECDCCCCCBCAC9C8C7C7C6C5C4C3C2C2C1C0BFBEBDBDBCBBBAB9B8B8B7B6B5B4B3B2B2B1B0AFAEADACABABAAA9A8A7A6A5A4A4A3A2A1A09F9E9D9C9C9B9A99989796959493939291908F8E8D8C8B8A8A898887868584838281807F7F7E7D7C7B7A79787776757473727271706F6E6D6C6B6A69686766656463626261605F5E5D5C5B5A595857565554535251504F4E4E4D4C4B4A494847464544434241403F3E3D3C3B3A39383736353433323130302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A090807060504030201><151515151515151514141414141414141414141414141414131313131313131313131313131313121212121212121212121212121211111111111111111111111111101010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090808080808080808080808070707070707070707070707060606060606060606060606050505050505050505050504040404040404040404040403030303030303030303030202020202020202020202020101010101010101010101000000000000>1 %_Br[0.007813 0.984375 0.003906 0 1 50 100 %_BS%_0.007813 0.984375 0.003906 0 1 50 100 Bs0.179688 1 0.925781 0.082031 1 53.8462 0 %_BS%_0.179688 1 0.925781 0.082031 1 53.8462 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 9)(Unnamed gradient 9) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D><FAFAF9F9F9F8F8F8F7F7F7F6F6F6F6F5F5F5F4F4F4F3F3F3F2F2F2F1F1F1F0F0F0EFEFEFEEEEEEEDEDEDEDECECECEBEBEBEAEAEAE9E9E9E8E8E8E7E7E7E6E6E6E5E5E5E4E4E4E3E3E3E3E2E2E2E1E1E1E0E0E0DFDFDFDEDEDEDDDDDDDCDCDCDBDBDBDADADADAD9D9D9D8D8D8D7D7D7D6D6D6D5D5D5D4D4D4D3D3D3D2D2D2D1D1D1D1D0><2D2C2C2C2B2B2B2A2A2A29292928282827272726262625252524242423232222222121212020201F1F1F1E1E1E1D1D1D1C1C1C1B1B1B1A1A1A19191818181717171616161515151414141313131212121111111010100F0F0E0E0E0D0D0D0C0C0C0B0B0B0A0A0A09090908080807070706060605050404040303030202020101010000><4140403F3F3E3E3D3D3C3C3B3B3A3A39393838373736363535343433333232313130302F2F2E2E2D2D2C2C2B2B2A2A29292828272726262525242423232222212120201F1F1E1E1D1D1C1C1B1B1A1A19191818171716161515141413131212111110100F0F0E0E0D0D0C0C0B0B0A0A0909080807070606050504040303020201010000>1 %_Br[0.488281 0.816406 0 0 1 50 100 %_BS%_0.488281 0.816406 0 0 1 50 100 Bs1 0.980469 0.175781 0.253906 1 50.0018 0 %_BS%_1 0.980469 0.175781 0.253906 1 50.0018 0 BsBD%AI5_EndGradient%AI5_Begin_NonPrintingNp12 Bn%AI5_BeginGradient: (Copper Radial)(Copper Radial) 1 4 Bd[0<0A0B0B0C0D0D0E0F0F1011111212131414151616171818191A1A1B1C1C1D1E1E1F2020212222232424252627272829292A2B2B2C2D2D2E2F2F303131323333343536><242525262728292A2B2C2D2E2F303132333435363738393A3B3C3D3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263><0001010202030404050606070808090A0A0B0C0C0D0E0E0F1010111212131414151616171818191A1A1B1C1C1D1E1E1F2020212222232424252627272829292A2B2B>1 %_Br<00010102020303040405060607070808090A0A0B0B0C0C0D0E0E0F0F10111112121313141515161617181819191A1B1B1C1C1D1E1E1F1F202121222223242425252627272828292A2A2B2B2C2D2D2E2E2F30303131323333343435363637383839393A3B3B3C3C3D3E3E3F3F404141424343444445464647474849494A4A4B4C4C4D4E4E4F4F50515152525354545556565757585959><3636373839393A3B3C3D3D3E3F4041424243444546464748494A4B4B4C4D4E4F5051515253545556565758595A5B5C5C5D5E5F6061626263646566676868696A6B6C6D6E6E6F70717273747475767778797A7A7B7C7D7E7F8081818283848586878788898A8B8C8D8E8E8F90919293949595969798999A9B9C9C9D9E9FA0A1A2A3A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B2B3B4B5><636465666768696A6B6C6C6D6E6F707172737475767778797A7B7C7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596979898999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5><2B2B2C2C2C2C2C2C2C2C2C2D2D2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F2F303030303030303031313131313131313232323232323232323333333333333333343434343434343435353535353535353536363636363636363737373737373737383838383838383839393939393939393A3A3A3A3A3A3A3A3A3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3D3D3D3D3D3D>1 %_Br<595A5A5A5A5B5B5B5B5C5C5C5C5D5D5D5D5E5E5E5E5F5F5F5F606060606161616162626262636363636464646465656565666666666767676768686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D6D6E><B5B6B6B7B8B8B9BABABBBCBCBDBEBEBFC0C0C1C2C2C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCECECFCFD0D1D1D2D3D3D4D5D5D6D7D7D8D9D9DADBDBDCDDDDDEDFDFE0E1E1E2E3E3E4E5E5E6E7E7E8E9E9EAEB><F5F5F4F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0EFEFEFEFEEEEEEEDEDEDEDECECECECEBEBEBEBEAEAEAEAE9E9E9E9E8E8E8E8E7E7E7E7E6E6E6E6E5E5E5E5E4E4E4E4E3E3E3E3E2E2E2E2E1E1E1E1E0><3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F>1 %_Br[0 0.04 0.14 0 1 51.0204 0.395812 %_BS%_0 0.04 0.14 0 1 51.0204 0.395812 Bs0 0.21 0.39 0.17 1 51.0204 30.8989 %_BS%_0 0.21 0.39 0.17 1 51.0204 30.8989 Bs0.35 0.71 0.96 0.24 1 50 78.0899 %_BS%_0.35 0.71 0.96 0.24 1 50 78.0899 Bs0.43 0.92 0.88 0.56 1 50 100 %_BS%_0.43 0.92 0.88 0.56 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Desert Sunset)(Desert Sunset) 0 6 Bd[<38393A3A3B3C3D3E3E3F404141424344444546474748494A4A4B4C4C4D4E4F4F5051515253535455555657575859595A5B5B5C5D5D5E5F5F60616162626364646565666767686869696A6B6B6C6C6D6D6E6E6F6F7070717172727373747475757676777778787879797A7A7B7B7B7C7C7C7D7D7E7E7E7E7F7F7F80808080818181818282828282><5758595A5B5C5D5E5F60616263636465666768696A6B6C6D6E6F70717272737475767778797A7A7B7C7D7E7F808081828384858586878889898A8B8C8D8D8E8F90909192939394959696979899999A9B9B9C9D9D9E9F9FA0A1A1A2A2A3A4A4A5A5A6A7A7A8A8A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B1B2B2B2B3B3B3B4B4B4B4B5B5B5B5><2E2E2F2F2F3030303131313232323333333434343535353636363737373838383939393A3A3A3A3B3B3B3C3C3C3D3D3D3D3E3E3E3F3F3F3F404040414141414242424243434344444444454545454646464646474747474848484849494949494A4A4A4A4A4B4B4B4B4B4C4C4C4C4C4C4D4D4D4D4D4D4D4E4E4E4E4E4E4E4E4F4F4F4F4F4F4F4F>01 %_Br<1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F303132323334343536373738><4040414242434444454646474848494A4A4B4C4C4D4E4E4F4F5051515253535455555657><5251504F4E4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E>01 %_Br<050606070808090A0A0B0B0C0D0D0E0F0F101111121213141415151617171818191A1A1B1B1C1C1D1E1E1F><2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F3F3F40><7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A595857565554535252>01 %_Br<0000000000000000000101010101010101010101010101010101020202020202020202020202020202020303030303030303030303030303030304040404040404040404040404040405050505050505050505><7A7A79787776757474737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B><9E9E9D9D9D9C9C9B9B9B9A9A99999998989797969696959594949393939292919190908F8F8F8E8E8D8D8C8C8C8B8B8A8A898988888887878686858584848383838282818180807F7F7E7E7E7D7D7C7C7B7B7A><0303020202020202020202020202020202020202020202020202020202020202020202020101010101010101010101010101010101010101010101010101010101010100000000000000000000000000000000>1 %_Br<05050505050505050404040404040404040404030303030303030303030303020202020202020202020202010101010101010101010101000000000000><91919190908F8F8F8E8E8E8D8D8C8C8C8B8B8A8A8A89898988888787878686858585848484838382828281818180807F7F7F7E7E7D7D7D7C7C7C7B7B7A><DBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E><2928282726262524242322222121201F1F1E1D1D1C1B1B1A191918181716161514141312121111100F0F0E0D0D0C0B0B0A0A0908080706060504040303>1 %_Br[0.51 0.71 0.31 0 1 50 100 %_BS%_0.51 0.71 0.31 0 1 50 100 Bs0.22 0.34 0.18 0 1 38.4615 71.0424 %_BS%_0.22 0.34 0.18 0 1 38.4615 71.0424 Bs0.12 0.25 0.32 0 1 50 53.6679 %_BS%_0.12 0.25 0.32 0 1 50 53.6679 Bs0.02 0.17 0.48 0 1 48 38.764 %_BS%_0.02 0.17 0.48 0 1 48 38.764 Bs0.000031 0.48 0.62 0.01 1 51.6129 13.1273 %_BS%_0.000031 0.48 0.62 0.01 1 51.6129 13.1273 Bs0.02 0.57 0.86 0.16 1 50 0 %_BS%_0.02 0.57 0.86 0.16 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Fade to Black)(Fade to Black) 0 2 Bd[00 %_Br[0 0 0 1 1 50 100 %_BS%_0 0 0 1 1 50 100 Bs0 0 0 1 1 50 0 %_BS%_0 0 0 1 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Linear Gradient)(Linear Gradient) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 0 1 1 50 100 %_BS%_0 0 0 1 1 50 100 Bs0 0 0 0 1 50 0 %_BS%_0 0 0 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Radial Gradient)(Radial Gradient) 1 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 0 0 1 50 0 %_BS%_0 0 0 0 1 50 0 Bs0 0 0 1 1 50 100 %_BS%_0 0 0 1 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Soft Black Vignette)(Soft Black Vignette) 1 3 Bd[0.20.20.211 %_Br0.20.20.211 %_Br[0.2 0.2 0.2 1 1 68.3944 73.8792 %_BS%_0.2 0.2 0.2 1 1 68.3944 73.8792 Bs0.2 0.2 0.2 1 1 31.8603 88.7329 %_BS%_0.2 0.2 0.2 1 1 31.8603 88.7329 Bs0.2 0.2 0.2 1 1 50 100 %_BS%_0.2 0.2 0.2 1 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 17)(Unnamed gradient 17) 0 6 Bd[<FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFB><2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A29292929292929292929292929292929292929292929292929292929292929292929292929292929292929292929292928282828282828282828282828><2B2B2B2B2A2A2A2A2A2A29292929292928282828282727272727272626262626262525252525252424242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717171716161616161615151515151514141414141313131313131212121212121111111111111010101010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A090909090909080808080808070707070707060606060606050505050505040404040404030303030303020202020202010101010101000000>1 %_Br<C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCFCFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDBDBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE><3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A39393939393939393939393939393938383838383838383838383838383737373737373737373737373737373636363636363636363636363636363535353535353535353535353535343434343434343434343434343434333333333333333333333333333333323232323232323232323232323231313131313131313131313131313130303030303030303030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E><0001010101010202020203030303030404040405050505050606060606070707070808080808090909090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F101010101011111111121212121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F2020202020212121212222222222232323232424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B>1 %_Br<DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCCCCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3><3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B><1A1A1A1A1A1A191919191919191918181818181818171717171717171716161616161616151515151515151514141414141414131313131313131312121212121212121111111111111110101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A09090909090909090808080808080807070707070707070606060606060605050505050505050404040404040403030303030303030202020202020202010101010101010000>1 %_Br<1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA><000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C0D0D0D0D0E0E0E0F0F0F10101011111112121213131313141414151515161616171717181818181919191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F30303031313132323232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E><EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF><0000000001010101010101010202020202020203030303030303030404040404040405050505050505050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F1010101010101011111111111111111212121212121213131313131313131414141414141415151515151515151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A>1 %_Br<0000000000000001010101010101010101010102020202020202020202020202030303030303030303030303040404040404040404040404040505050505050505050505050606060606060606060606060607070707070707070707070707080808080808080808080808090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010101111111111111111111111111212121212121212121212121213131313131313131313131314141414141414141414><FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDED><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br[0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS%_0.000031 0.985199 0.157778 0.000031 1 50 100 Bs0.997467 1 0.178775 0.168856 1 50 80 %_BS%_0.997467 1 0.178775 0.168856 1 50 80 Bs0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs0.85388 0.242313 1 0.102846 1 50 40 %_BS%_0.85388 0.242313 1 0.102846 1 50 40 Bs0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs0.000031 0.99472 1 0.001282 1 50 0 %_BS%_0.000031 0.99472 1 0.001282 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 18)(Unnamed gradient 18) 1 6 Bd[<0000000000000001010101010101010101010102020202020202020202020202030303030303030303030303040404040404040404040404040505050505050505050505050606060606060606060606060607070707070707070707070707080808080808080808080808090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010101111111111111111111111111212121212121212121212121213131313131313131313131314141414141414141414><FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDED><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br<1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA><000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C0D0D0D0D0E0E0E0F0F0F10101011111112121213131313141414151515161616171717181818181919191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F30303031313132323232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E><EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF><0000000001010101010101010202020202020203030303030303030404040404040405050505050505050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F1010101010101011111111111111111212121212121213131313131313131414141414141415151515151515151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A>1 %_Br<DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCCCCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3><3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B><1A1A1A1A1A1A191919191919191918181818181818171717171717171716161616161616151515151515151514141414141414131313131313131312121212121212121111111111111110101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A09090909090909090808080808080807070707070707070606060606060605050505050505050404040404040403030303030303030202020202020202010101010101010000>1 %_Br<C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCFCFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDBDBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE><3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A39393939393939393939393939393938383838383838383838383838383737373737373737373737373737373636363636363636363636363636363535353535353535353535353535343434343434343434343434343434333333333333333333333333333333323232323232323232323232323231313131313131313131313131313130303030303030303030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E><0001010101010202020203030303030404040405050505050606060606070707070808080808090909090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F101010101011111111121212121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F2020202020212121212222222222232323232424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B>1 %_Br<FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFB><2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A29292929292929292929292929292929292929292929292929292929292929292929292929292929292929292929292928282828282828282828282828><2B2B2B2B2A2A2A2A2A2A29292929292928282828282727272727272626262626262525252525252424242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717171716161616161615151515151514141414141313131313131212121212121111111111111010101010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A090909090909080808080808070707070707060606060606050505050505040404040404030303030303020202020202010101010101000000>1 %_Br[0.000031 0.99472 1 0.001282 1 50 0 %_BS%_0.000031 0.99472 1 0.001282 1 50 0 Bs0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs0.85388 0.242313 1 0.102846 1 50 40 %_BS%_0.85388 0.242313 1 0.102846 1 50 40 Bs0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs0.997467 1 0.178775 0.168856 1 50 80 %_BS%_0.997467 1 0.178775 0.168856 1 50 80 Bs0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS%_0.000031 0.985199 0.157778 0.000031 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 20)(Unnamed gradient 20) 0 2 Bd[<0001020303040506070708090A0B0C0C0D0E0F1011111213141516161718191A1B1B1C1D1E1F2020212223242525262728292A2A2B2C2D2E2F2F3031323334343536373839393A3B3C3D3E3E3F4041424343444546474848494A4B4C4D4D4E4F5051525253545556575758595A5B5B5C5D5E5F6060616263646565666768696A6A6B6C6D6E6F6F7071727374747576777879797A7B7C7D7E7E7F8081828383848586878888898A8B8C8D8D8E8F9091929293949596979798999A9B9C9C9D9E9FA0A1A1A2A3A4A5A6A6A7A8A9AAABABACADAEAFB0B0B1B2B3B4B4B5B6B7B8B9B9BABBBCBDBEBEBF><000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353636373839393A3B3C3C3D3E3F3F404142424344454546474848494A4B4B4C4D4E4E4F505151525354545556575758595A5A5B5C5D5D5E5F606061626363646566666768696A6A6B6C6D6D6E6F70707172737374757676777879797A7B7C7C7D7E7F7F808182828384858586878888898A8B8B8C8D8E8E8F909191929394949596979798999A9A9B9C9D9D9E9FA0A1A1A2A3A4A4A5A6A7A7A8A9AAAAABACADAD><000101020304040506070708090A0A0B0C0D0D0E0F10101112131314151616171819191A1B1C1C1D1E1E1F202121222324242526272728292A2A2B2C2D2D2E2F30303132333334353636373838393A3B3B3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858595A5B5B5C5D5E5E5F606161626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7E7F80818182838484858686878889898A8B8C8C8D8E8F8F909192929394959596979898999A9B9B9C9D9E9E9FA0A1A1A2A3A3A4A5A6A6A7A8A9A9AAAB><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6>1 %_Br[0.75021 0.679683 0.670222 0.90164 1 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 1 50 100 Bs0.000031 0.000031 0.000031 0.000031 1 50 0 %_BS%_0.000031 0.000031 0.000031 0.000031 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 21)(Unnamed gradient 21) 0 5 Bd[<04050505050505050505050505060606060606060606060606070707070707070707070707070808080808080808080808080809090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F10101010101010101010101010101010101010101010111111111111111111111111111111111111111111111111111112121212121212121212121212121212121212121212121212121212121212121212121212121213131313131313131313131313131313><E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBFBEBDBCBBBAB9B8B7B6B6B5B4B3B2B1B0AFAFAEADACABAAA9A8A8A7A6A5A4A3A3A2A1A09F9E9E9D9C9B9A9A9998979696959493929291908F8F8E8D8C8B8B8A89888887868585848383828180807F7E7E7D7C7B7B7A7979787777767575747373727171706F6F6E6D6D6C6B6B6A6A69686867676665656464636262616160605F5E5E5D5D5C5C5B5B5A5A59595857575656555554545353535252515150504F4F4E4E4E4D4D4C4C4B4B4B4A4A49494948484847474646464545454444444343434342424241414141404040403F3F3F3F3F3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D><FFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br<1414141414141414141414131313131313131313131313131313121212121212121212121212121211111111111111111111111111111110101010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090909090808080808080808080808080808070707070707070707070707070707060606060606060606060606060605050505050505050505050505050504><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5><EDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFF><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br<1F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A19191919191919191919191919191919191919191918181818181818181818181818181818181818181717171717171717171717171717171717171717171616161616161616161616161616161616161616151515151515151515151515151515151515151515141414141414><848382828181807F7F7E7E7D7C7C7B7B7A79797878777676757574737372727170706F6F6E6D6D6C6C6B6A6A69696867676666656464636362616160605F5E5E5D5D5C5B5B5A5A595858575756555554545352525151504F4F4E4E4D4C4C4B4B4A49494848474646454544434342424140403F3E3E3D3D3C3B3B3A3A393838373736353534343332323131302F2F2E2E2D2C2C2B2B2A29292828272626252524232322222120201F1F1E1D1D1C1C1B1A1A19191817171616151414131312111110100F0E0E0D0D0C0B0B0A0A09080807070605050404030202010100><131415161718191A1B1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECED>0.0000311 %_Br<C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9998979694939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><2E2F303031313232333334343535363637383839393A3A3B3B3C3C3D3D3E3E3F3F4041414242434344444545464647474849494A4A4B4B4C4C4D4D4E4E4F4F5051515252535354545555565657575859595A5A5B5B5C5C5D5D5E5E5F5F6060616262636364646565666667676868696A6A6B6B6C6C6D6D6E6E6F6F707071727273737474757576767777787879797A7B7B7C7C7D7D7E7E7F7F8080818182838384><424141414040403F3F3F3F3E3E3E3D3D3D3D3C3C3C3B3B3B3A3A3A3A393939383838383737373636363535353534343433333333323232313131303030302F2F2F2E2E2E2E2D2D2D2C2C2C2B2B2B2B2A2A2A292929292828282727272626262625252524242424232323222222212121212020201F1F1F1F1E1E1E1D1D1D1C1C1C1C1B1B1B1A1A1A1A191919181818181717171616161515151514141413131313>0.0000311 %_Br[0.073152 0.237522 0.969482 0.000031 1 50 100 %_BS%_0.073152 0.237522 0.969482 0.000031 1 50 100 Bs0.017517 0.897581 1 0.001343 1 35.5263 79.7753 %_BS%_0.017517 0.897581 1 0.001343 1 35.5263 79.7753 Bs0.079316 0.000031 0.930816 0.000031 1 50 55.618 %_BS%_0.079316 0.000031 0.930816 0.000031 1 50 55.618 Bs0.121096 0.516075 0.072572 0.000031 1 50 44.9438 %_BS%_0.121096 0.516075 0.072572 0.000031 1 50 44.9438 Bs0.751858 0.182254 0.256992 0.000031 1 50 19.1011 %_BS%_0.751858 0.182254 0.256992 0.000031 1 50 19.1011 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 396)(Unnamed gradient 396) 1 2 Bd[0.0000310.0000310.0000310.0000311 %_Br[0.000031 0.000031 0.000031 0.000031 1 87 44.4444 %_BS%_0.000031 0.000031 0.000031 0.000031 1 87 44.4444 Bs0.000031 0.000031 0.000031 0.000031 1 50 100 %_BS%_0.000031 0.000031 0.000031 0.000031 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 72)(Unnamed gradient 72) 0 2 Bd[<CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECE><09090A0B0C0C0D0E0E0F10111112131414151617171819191A1B1C1C1D1E1F1F202122222324242526272728292A2A2B2C2D2D2E2F2F303132323334353536373838393A3A3B3C3D3D3E3F40404142424344454546474848494A4B4B4C4D4D4E4F50505152535354555656575858595A5B5B5C5D5E5E5F60616162636364656666676869696A6B6C6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F><FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F2F2F2F2F2F2F2F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDECECECECECECECEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAE9E9E9E9><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041424344454647494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2>1 %_Br[0.806394 0.496437 0.913573 0.634302 1 50 98.3146 %_BS%_0.806394 0.496437 0.913573 0.634302 1 50 98.3146 Bs0.798978 0.033753 1 0.00119 1 50 0 %_BS%_0.798978 0.033753 1 0.00119 1 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Fish Pattern)(Fish Pattern) 77.5215 31.4824 155.3037 96.7959 [%AI3_Tile(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 38.085 m26.7441 24.5742 7.7324 50.1514 v7.7324 0.7559 l26.7441 26.334 48.6924 12.8223 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 38.085 m26.7441 24.5742 7.7324 50.1514 v7.7324 0.7559 l26.7441 26.334 48.6924 12.8223 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 38.085 m104.5264 24.5742 85.5137 50.1514 v85.5137 0.7559 l104.5264 26.334 126.4736 12.8223 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 38.085 m104.5264 24.5742 85.5137 50.1514 v85.5137 0.7559 l104.5264 26.334 126.4736 12.8223 yS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.4521 70.7412 m144.4004 57.2314 163.4121 82.8076 v163.4121 33.4131 l144.4004 58.9902 122.4521 45.4785 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.4521 70.7412 m144.4004 57.2314 163.4121 82.8076 v163.4121 33.4131 l144.4004 58.9902 122.4521 45.4785 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 78.6689 m122.4805 70.8115 l144.4277 57.3008 163.4404 82.8779 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 78.6689 m122.4805 70.8115 l144.4277 57.3008 163.4404 82.8779 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 103.3984 m104.5264 89.8877 85.5137 115.4648 v85.5137 66.0693 l104.5264 91.6475 126.4736 78.1357 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 103.3984 m104.5264 89.8877 85.5137 115.4648 v85.5137 66.0693 l104.5264 91.6475 126.4736 78.1357 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 102.8643 m122.4805 110.7227 l144.4277 124.2334 163.4404 98.6563 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 102.8643 m122.4805 110.7227 l144.4277 124.2334 163.4404 98.6563 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 98.3916 m158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C99.5859 94.7793 99.5859 90.6816 v99.5859 86.9863 103.6016 87.5869 Y123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c170.8945 93.6357 164.7207 98.3916 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 98.3916 m158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C99.5859 94.7793 99.5859 90.6816 v99.5859 86.9863 103.6016 87.5869 Y123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c170.8945 93.6357 164.7207 98.3916 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR157.2695 96.7959 m157.2695 95.71 156.3896 94.8291 155.3027 94.8291 c154.2168 94.8291 153.3369 95.71 153.3369 96.7959 c153.3369 97.8828 154.2168 98.7637 155.3027 98.7637 c156.3896 98.7637 157.2695 97.8828 157.2695 96.7959 cf142.3477 90.6719 m142.3477 96.1738 146.54 100.6943 151.9033 101.2197 C151.5596 101.2529 151.2109 101.2715 150.8584 101.2715 c145.0039 101.2715 140.2588 96.5264 140.2588 90.6719 c140.2588 84.8184 145.0039 80.0723 150.8584 80.0723 c151.2109 80.0723 151.5596 80.0918 151.9033 80.125 C146.54 80.6494 142.3477 85.1709 142.3477 90.6719 cf%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 78.6689 m44.6982 70.8115 l66.6465 57.3008 85.6582 82.8779 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 78.6689 m44.6982 70.8115 l66.6465 57.3008 85.6582 82.8779 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.6699 70.7412 m66.6182 57.2314 85.6299 82.8076 v85.6299 33.4131 l66.6182 58.9902 44.6699 45.4785 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.6699 70.7412 m66.6182 57.2314 85.6299 82.8076 v85.6299 33.4131 l66.6182 58.9902 44.6699 45.4785 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 103.3984 m26.7441 89.8877 7.7324 115.4648 v7.7324 66.0693 l26.7441 91.6475 48.6924 78.1357 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 103.3984 m26.7441 89.8877 7.7324 115.4648 v7.7324 66.0693 l26.7441 91.6475 48.6924 78.1357 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 102.8643 m44.6982 110.7227 l66.6465 124.2334 85.6582 98.6563 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 102.8643 m44.6982 110.7227 l66.6465 124.2334 85.6582 98.6563 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 98.3916 m80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C21.8037 94.7793 21.8037 90.6816 v21.8037 86.9863 25.8193 87.5869 Y45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c93.1123 93.6357 86.9395 98.3916 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 98.3916 m80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C21.8037 94.7793 21.8037 90.6816 v21.8037 86.9863 25.8193 87.5869 Y45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c93.1123 93.6357 86.9395 98.3916 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR79.4883 96.7959 m79.4883 95.71 78.6084 94.8291 77.5215 94.8291 c76.4355 94.8291 75.5557 95.71 75.5557 96.7959 c75.5557 97.8828 76.4355 98.7637 77.5215 98.7637 c78.6084 98.7637 79.4883 97.8828 79.4883 96.7959 cf64.5654 90.6719 m64.5654 96.1738 68.7578 100.6943 74.1211 101.2197 C73.7773 101.2529 73.4297 101.2715 73.0762 101.2715 c67.2227 101.2715 62.4766 96.5264 62.4766 90.6719 c62.4766 84.8184 67.2227 80.0723 73.0762 80.0723 c73.4297 80.0723 73.7773 80.0918 74.1211 80.125 C68.7578 80.6494 64.5654 85.1709 64.5654 90.6719 cf%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 46.0117 m48.6641 38.1553 l26.7158 24.6436 7.7041 50.2217 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 46.0117 m48.6641 38.1553 l26.7158 24.6436 7.7041 50.2217 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 70.207 m48.6641 78.0654 l26.7158 91.5762 7.7041 65.999 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 70.207 m48.6641 78.0654 l26.7158 91.5762 7.7041 65.999 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR67.4922 61.3281 m47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C0.25 60.9795 0.25 58.1104 v0.25 55.6309 3.666 52.79 5.3535 51.2305 c5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C71.5586 54.3301 71.5586 58.0254 v71.5586 62.123 67.4922 61.3281 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR67.4922 61.3281 m47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C0.25 60.9795 0.25 58.1104 v0.25 55.6309 3.666 52.79 5.3535 51.2305 c5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C71.5586 54.3301 71.5586 58.0254 v71.5586 62.123 67.4922 61.3281 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR13.874 64.1396 m13.874 63.0527 14.7539 62.1729 15.8408 62.1729 c16.9268 62.1729 17.8066 63.0527 17.8066 64.1396 c17.8066 65.2266 16.9268 66.1064 15.8408 66.1064 c14.7539 66.1064 13.874 65.2266 13.874 64.1396 cf28.7969 58.0156 m28.7969 63.5176 24.6045 68.0381 19.2412 68.5635 C19.585 68.5967 19.9326 68.6152 20.2861 68.6152 c26.1396 68.6152 30.8857 63.8691 30.8857 58.0156 c30.8857 52.1611 26.1396 47.416 20.2861 47.416 c19.9326 47.416 19.585 47.4355 19.2412 47.4688 C24.6045 47.9932 28.7969 52.5146 28.7969 58.0156 cf%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 46.0117 m126.4463 38.1553 l104.498 24.6436 85.4863 50.2217 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 46.0117 m126.4463 38.1553 l104.498 24.6436 85.4863 50.2217 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 70.207 m126.4463 78.0654 l104.498 91.5762 85.4863 65.999 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 70.207 m126.4463 78.0654 l104.498 91.5762 85.4863 65.999 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR145.2734 61.3281 m125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C78.0322 60.9795 78.0322 58.1104 v78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c83.1729 51.1963 83.2139 51.1592 83.25 51.126 c83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C149.3408 54.3301 149.3408 58.0254 v149.3408 62.123 145.2734 61.3281 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR145.2734 61.3281 m125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C78.0322 60.9795 78.0322 58.1104 v78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c83.1729 51.1963 83.2139 51.1592 83.25 51.126 c83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C149.3408 54.3301 149.3408 58.0254 v149.3408 62.123 145.2734 61.3281 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR91.6563 64.1396 m91.6563 63.0527 92.5361 62.1729 93.623 62.1729 c94.709 62.1729 95.5889 63.0527 95.5889 64.1396 c95.5889 65.2266 94.709 66.1064 93.623 66.1064 c92.5361 66.1064 91.6563 65.2266 91.6563 64.1396 cf106.5781 58.0156 m106.5781 63.5176 102.3867 68.0381 97.0234 68.5635 C97.3662 68.5967 97.7148 68.6152 98.0684 68.6152 c103.9219 68.6152 108.668 63.8691 108.668 58.0156 c108.668 52.1611 103.9219 47.416 98.0684 47.416 c97.7148 47.416 97.3662 47.4355 97.0234 47.4688 C102.3867 47.9932 106.5781 52.5146 106.5781 58.0156 cf%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 13.3555 m122.4805 5.498 l144.4277 -8.0127 163.4404 17.5645 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 13.3555 m122.4805 5.498 l144.4277 -8.0127 163.4404 17.5645 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 37.5508 m122.4805 45.4092 l144.4277 58.9199 163.4404 33.3428 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 37.5508 m122.4805 45.4092 l144.4277 58.9199 163.4404 33.3428 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 33.0781 m158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C99.5859 29.4658 99.5859 25.3691 v99.5859 21.6729 103.6016 22.2734 Y123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c165.7119 18.502 165.7529 18.54 165.79 18.5732 c167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c170.8945 28.3232 164.7207 33.0781 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 33.0781 m158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C99.5859 29.4658 99.5859 25.3691 v99.5859 21.6729 103.6016 22.2734 Y123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c165.7119 18.502 165.7529 18.54 165.79 18.5732 c167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c170.8945 28.3232 164.7207 33.0781 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR157.2695 31.4824 m157.2695 30.3965 156.3896 29.5156 155.3027 29.5156 c154.2168 29.5156 153.3369 30.3965 153.3369 31.4824 c153.3369 32.5693 154.2168 33.4502 155.3027 33.4502 c156.3896 33.4502 157.2695 32.5693 157.2695 31.4824 cf142.3477 25.3594 m142.3477 30.8604 146.54 35.3809 151.9033 35.9063 C151.5596 35.9395 151.2109 35.959 150.8584 35.959 c145.0039 35.959 140.2588 31.2129 140.2588 25.3594 c140.2588 19.5049 145.0039 14.7598 150.8584 14.7598 c151.2109 14.7598 151.5596 14.7783 151.9033 14.8115 C146.54 15.3359 142.3477 19.8574 142.3477 25.3594 cf%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 13.3555 m44.6982 5.498 l66.6465 -8.0127 85.6582 17.5645 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 13.3555 m44.6982 5.498 l66.6465 -8.0127 85.6582 17.5645 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 37.5508 m44.6982 45.4092 l66.6465 58.9199 85.6582 33.3428 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 37.5508 m44.6982 45.4092 l66.6465 58.9199 85.6582 33.3428 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 33.0781 m80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C21.8037 29.4658 21.8037 25.3691 v21.8037 21.6729 25.8193 22.2734 Y45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c87.9307 18.502 87.9707 18.54 88.0088 18.5732 c89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c93.1123 28.3232 86.9395 33.0781 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 33.0781 m80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C21.8037 29.4658 21.8037 25.3691 v21.8037 21.6729 25.8193 22.2734 Y45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c87.9307 18.502 87.9707 18.54 88.0088 18.5732 c89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c93.1123 28.3232 86.9395 33.0781 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR79.4883 31.4824 m79.4883 30.3965 78.6084 29.5156 77.5215 29.5156 c76.4355 29.5156 75.5557 30.3965 75.5557 31.4824 c75.5557 32.5693 76.4355 33.4502 77.5215 33.4502 c78.6084 33.4502 79.4883 32.5693 79.4883 31.4824 cf64.5654 25.3594 m64.5654 30.8604 68.7578 35.3809 74.1211 35.9063 C73.7773 35.9395 73.4297 35.959 73.0762 35.959 c67.2227 35.959 62.4766 31.2129 62.4766 25.3594 c62.4766 19.5049 67.2227 14.7598 73.0762 14.7598 c73.4297 14.7598 73.7773 14.7783 74.1211 14.8115 C68.7578 15.3359 64.5654 19.8574 64.5654 25.3594 cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed 20)0 Auu0 J 0 j 1 w 4 M []0 d0 XR-4066.5 4426.4351 m-3852.8999 4426.4351 L-3852.8999 4418.6343 L-4066.5 4418.6343 L-4066.5 4426.4351 Ln0 O0 0 0 1 k-4066.5 4422.5352 m-4056.4856 4425.0269 -4049.6863 4426.375 -4037.7007 4426.4351 c-4024.7185 4426.5 -3959.6997 4426.4351 y-3894.6816 4426.5 -3881.6997 4426.4351 v-3869.7124 4426.375 -3862.9136 4425.0269 -3852.8999 4422.5352 C-3862.9136 4420.0435 -3869.7124 4418.6953 -3881.6997 4418.6343 c-3894.6816 4418.5688 -3959.6997 4418.6343 y-4024.7185 4418.5688 -4037.7007 4418.6343 v-4049.6863 4418.6953 -4056.4856 4420.0435 -4066.5 4422.5352 CfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 12)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7939 8299 m-7841.2451 8299 L-7841.2451 8278.2842 L-7939 8278.2842 L-7939 8299 Ln0 O0 g1 XR-7841.5586 8294.3184 m-7856.8247 8280.5303 -7874.5537 8301.4492 -7889.9277 8289.166 C-7888.4199 8283.5137 -7882.7598 8290.4678 -7880.5176 8285.8213 C-7880.4341 8284.2207 -7883.6313 8285.7207 -7883.5127 8283.6006 C-7881.6245 8280.1914 -7876.8955 8280.6885 -7875.5664 8284.7373 C-7869.3115 8282.7676 -7862.7734 8276.8242 -7856.7847 8278.6172 C-7855.2671 8279.9678 -7856.0708 8281.1514 -7855.6211 8282.4277 C-7848.2871 8277.9922 -7839.4644 8287.1279 -7841.5586 8294.3184 Cf-7885.2842 8295.9326 m-7885.8247 8296.3086 -7884.9277 8297.4199 -7885.2529 8297.9082 C-7887.3237 8297.1563 -7889.6919 8293.0781 -7891.4731 8290.3105 C-7891.2632 8291.8398 -7892.6641 8293.1641 -7894.0781 8290.9326 C-7894.2383 8290.1152 -7893.3667 8289.8281 -7893.6729 8288.9365 C-7894.8306 8287.3682 -7895.8472 8288.8535 -7896.7798 8288.625 C-7897.3184 8287.8613 -7897.6143 8287.2188 -7897.6816 8286.6943 C-7891.5537 8283.874 -7884.9263 8295.6768 -7878.7456 8296.1025 C-7878.9048 8299.1152 -7882.8555 8300.8008 -7885.2842 8295.9326 Cfuu0 XR-7882.1602 8290.6602 m-7897.0142 8284.1201 -7918.4731 8288.3418 -7934.3687 8288.3193 c-7940.2988 8288.3125 -7929.8965 8288.3213 -7935.8267 8288.3262 cN0 O0 g-7879.8052 8289.4395 m-7897.1475 8282.2637 -7916.9341 8287.0557 -7935.0532 8286.9863 C-7935.8608 8287.873 -7936.6685 8288.7617 -7937.4751 8289.6475 C-7936.6973 8289.6475 -7935.9194 8289.6465 -7935.1421 8289.6533 C-7934.3345 8288.7656 -7933.5273 8287.8789 -7932.7202 8286.9922 C-7933.3516 8287.002 -7933.9844 8286.9951 -7934.6157 8286.9951 c-7936.3735 8286.998 -7940.9165 8289.6621 -7937.0376 8289.6572 c-7936.4063 8289.6572 -7935.7734 8289.6641 -7935.1421 8289.6533 c-7933.4155 8289.626 -7928.8184 8287.0234 -7932.7202 8286.9922 c-7933.4976 8286.9834 -7934.2759 8286.9863 -7935.0532 8286.9863 c-7936.8081 8286.9854 -7941.3574 8289.6328 -7937.4751 8289.6475 c-7920.1177 8289.7148 -7901.1025 8285.0137 -7884.5151 8291.8789 c-7883.1035 8292.4639 -7877.8081 8290.2666 -7879.8052 8289.4395 c-7879.8052 8289.4395 lfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 2)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7921 8299 m-7939 8299 L-7939 8281 L-7921 8281 L-7921 8299 Lnuu0 Ap0 O0 0 0 1 k-7920.9658 8291.4375 m-7939 8291.4375 L-7939 8288.5625 L-7920.9658 8288.5625 L-7920.9658 8291.4375 L-7920.9658 8291.4375 LfUu0.15 1 0.9 0.1 k-7920.9658 8290.7002 m-7937.5 8290.7002 L-7937.5 8289.3008 L-7920.9658 8289.3008 L-7920.9658 8290.7002 L-7920.9658 8290.7002 LfUu0 1 1 0 k-7920.9658 8290.3125 m-7936.5 8290.3125 L-7936.5 8289.6865 L-7920.9658 8289.6865 L-7920.9658 8290.3125 L-7920.9658 8290.3125 LfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 3)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7921 8299 m-7939 8299 L-7939 8281 L-7921 8281 L-7921 8299 Lnuu0 Ap0 O0 0 0 1 k-7921 8291.4375 m-7939 8291.4375 L-7939 8288.5625 L-7921 8288.5625 L-7921 8291.4375 L-7921 8291.4375 LfUu0.15 1 0.9 0.1 k-7921 8290.7002 m-7939 8290.7002 L-7939 8289.3008 L-7921 8289.3008 L-7921 8290.7002 L-7921 8290.7002 LfUu0 1 1 0 k-7921 8290.3125 m-7939 8290.3125 L-7939 8289.6865 L-7921 8289.6865 L-7921 8290.3125 L-7921 8290.3125 LfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 4)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7938.8833 8298.9551 m-7847.0479 8298.9551 L-7847.0479 8294.6758 L-7938.8833 8294.6758 L-7938.8833 8298.9551 Ln0 O0 0 0 1 k-7938.6631 8296.2754 m-7939 8296.3418 -7938.4814 8296.5313 -7938.8833 8296.3887 C-7938.8379 8296.2705 -7938.7725 8296.1816 -7938.6631 8296.2754 Cf-7848.1675 8296.4414 m-7849.2524 8297.2041 -7850.6816 8296.4336 -7851.8701 8296.9199 C-7852.0098 8296.9521 -7851.8345 8296.502 -7852.1484 8296.6025 C-7853.3008 8297.1953 -7855.1162 8296.8418 -7856.5195 8296.3848 C-7856.4346 8296.2666 L-7856.7017 8296.1816 -7857.0283 8296.5723 -7857.3115 8296.5176 C-7857.3135 8296.4395 -7857.2207 8296.4063 -7857.2861 8296.2988 C-7857.3574 8296.5352 -7857.7983 8296.4082 -7857.9185 8296.584 C-7858.0303 8296.4922 -7858.0195 8296.3047 -7858.1641 8296.2012 C-7858.3262 8296.4697 L-7858.7769 8297.1094 -7859.4209 8296.4258 -7860.0361 8296.7559 C-7860.0063 8296.6934 -7859.9453 8296.6445 -7859.9941 8296.584 C-7860.9814 8296.9727 -7862.2168 8296.9004 -7863.3208 8297.043 C-7863.2769 8296.9482 -7863.2363 8296.7754 -7863.3008 8296.668 C-7863.3555 8296.9512 -7863.6963 8297.0225 -7863.9922 8297.0781 C-7864.1255 8296.7871 -7864.4995 8297.3438 -7864.8467 8297.1836 C-7864.8169 8297.1191 L-7865.0732 8297.4238 -7865.1973 8296.9434 -7865.4053 8297.3086 C-7865.5684 8297.0801 L-7865.6807 8297.4902 -7865.9395 8296.8672 -7866.1514 8297.0762 C-7866.1445 8297.1602 L-7866.3442 8297.2598 -7866.4482 8297.0537 -7866.6338 8297.123 C-7866.6514 8297.0762 L-7867.0854 8297.1836 -7867.3379 8296.9551 -7867.3271 8297.2754 C-7867.4795 8297.0186 -7866.9063 8297.1582 -7867.1455 8296.7852 C-7868.5732 8297.1152 -7870.0459 8297.0508 -7871.4834 8297.0566 C-7871.6465 8296.9277 -7871.7505 8296.8887 -7871.7871 8296.7676 C-7871.9307 8296.832 -7872.3281 8296.8262 -7872.4585 8296.9902 C-7872.4102 8296.9834 -7872.5513 8296.8262 -7872.6274 8296.8105 C-7872.8887 8296.6895 -7872.9131 8297.1621 -7873.2002 8297.0186 C-7873.0859 8296.9336 -7873.0469 8296.8301 -7873.0854 8296.7109 C-7873.3301 8296.9609 -7873.6577 8296.9209 -7873.9473 8297.002 C-7873.9023 8296.9482 -7873.8325 8296.916 -7873.8433 8296.8154 C-7874.1602 8297.0986 -7874.4209 8296.7559 -7874.6982 8296.9346 C-7874.5947 8296.75 L-7875.0415 8296.5254 -7874.7266 8297.1367 -7875.1128 8297.0039 C-7875.02 8296.9453 -7875.0527 8296.873 -7875.0361 8296.7979 C-7875.3965 8297.1338 -7875.9795 8297.0225 -7876.3389 8297.1367 C-7876.3174 8297.1113 -7876.3232 8297.0605 Y-7876.7148 8297.1025 -7877.1245 8296.998 -7877.5552 8297.1445 C-7877.7119 8297.0625 -7877.5039 8296.6934 -7877.9185 8296.7617 C-7877.9033 8297.1328 -7878.6221 8296.9141 -7878.3779 8297.334 C-7878.7319 8297.2734 -7879.2925 8297.1338 -7879.5283 8297.2598 C-7879.3691 8297.1191 -7879.7007 8296.8066 -7879.4063 8296.7754 C-7879.6289 8296.5498 L-7879.5957 8296.3984 -7879.3999 8296.6016 -7879.4707 8296.4102 C-7879.6182 8296.4258 -7880.0479 8296.5723 -7880.1797 8296.5117 C-7880.4531 8296.7393 -7880.7041 8297.1641 -7881.1465 8297.2109 C-7880.9385 8297.0664 -7881.2646 8296.8018 -7881.1235 8296.7383 C-7881.7407 8297.4492 L-7881.8877 8297.4668 -7881.7725 8297.1563 -7881.9854 8297.2529 C-7881.9746 8297.3516 -7882.0674 8297.4121 -7882.1318 8297.4922 C-7882.1875 8297.4492 -7882.7441 8297.584 -7882.8081 8297.2188 C-7882.8735 8297.0762 -7882.5684 8297.1426 -7882.7314 8297.0117 C-7883.0029 8297.0156 -7883.0151 8297.1406 -7883.2871 8297.1465 C-7883.2925 8297.0977 L-7883.4717 8297.043 -7883.8213 8297.2529 -7883.6265 8297.4551 C-7883.5015 8297.4668 -7883.6738 8297.2354 -7883.4888 8297.3418 C-7883.6152 8297.5537 -7883.9312 8297.6133 -7884.2031 8297.6172 C-7884.1104 8297.5586 -7884.1216 8297.4609 -7884.0845 8297.3574 C-7884.4497 8297.6445 -7884.8369 8297.7354 -7885.2451 8297.8555 C-7885.2515 8298.0293 -7885.0928 8297.5391 -7885.0327 8297.6309 C-7885.5557 8297.3896 -7886.1128 8297.9727 -7886.5479 8297.6201 C-7886.4766 8297.5898 -7886.5098 8297.8672 -7886.5146 8297.8184 C-7886.7666 8297.7969 -7886.7549 8297.5449 -7886.9189 8297.6377 C-7886.9355 8297.4902 -7887.1255 8297.6855 -7887.2944 8297.7305 C-7887.3818 8297.8369 -7887.3384 8297.6582 -7887.1914 8297.6426 C-7887.4268 8297.7676 -7888.3691 8297.9941 -7888.9131 8297.7793 C-7888.9023 8297.877 -7889.2471 8298.1377 -7889.3721 8298.127 C-7889.3232 8297.8984 L-7889.4375 8297.7617 -7889.7422 8297.918 -7889.7632 8297.7227 C-7890.0303 8298 -7888.7344 8297.4863 -7889.0957 8297.7002 C-7889.1895 8297.5098 -7889.5991 8298.0645 -7889.5215 8297.7529 C-7889.7725 8297.7617 -7890.0161 8298.0186 -7890.2559 8297.8047 C-7890.1865 8297.8418 -7890.0522 8297.4873 -7890.2549 8297.5039 C-7890.6123 8297.5449 -7890.3564 8297.6133 -7890.6465 8297.6895 C-7890.8281 8297.7832 L-7890.8398 8298.0059 -7891.1475 8297.7529 -7891.0146 8298.002 C-7891.0586 8297.8184 -7891.5337 8298.1152 -7891.4971 8297.7461 C-7891.4473 8297.4551 L-7891.6016 8297.4766 -7891.7002 8297.7617 -7891.8213 8297.8896 C-7891.8418 8297.8633 -7891.8823 8297.8047 -7891.8745 8297.7578 C-7891.8994 8298.2031 -7892.2432 8297.7207 -7892.4268 8298.0645 C-7892.7505 8297.9102 -7893.2495 8298.0508 -7893.4023 8297.7734 C-7893.6514 8297.9082 -7893.8784 8298.0684 -7894.1621 8297.9727 C-7894.1055 8297.9307 -7894.0283 8297.918 -7894.0122 8297.8223 C-7894.1904 8297.6914 -7894.2344 8297.8086 -7894.3975 8297.8809 C-7894.3608 8297.8145 -7894.7539 8297.6201 -7894.9521 8297.4629 C-7895.1992 8297.5957 -7895.1143 8297.8359 -7895.1392 8297.9824 C-7895.3652 8297.543 -7895.8379 8298.2656 -7896.1211 8297.8672 C-7896.0352 8297.8066 -7895.7598 8297.6514 -7895.9658 8297.541 C-7896.1919 8297.1025 -7896.4219 8297.8652 -7896.7861 8297.6543 C-7896.6968 8298.0186 L-7896.8594 8297.793 -7897.2334 8298.2305 -7897.1963 8297.8594 C-7897.3184 8297.9902 -7897.6265 8297.7383 -7897.5859 8298.0938 C-7898.1846 8297.793 -7899.0425 8298.2754 -7899.4102 8297.6377 C-7899.4961 8297.6973 -7899.7104 8297.6367 -7899.6665 8297.8193 C-7899.5239 8298.0176 -7899.4673 8297.6777 -7899.4141 8297.8125 C-7899.4912 8297.8232 -7899.5078 8297.9209 -7899.5161 8297.9697 C-7899.7021 8297.8887 -7899.8486 8297.8633 -7899.6729 8297.5674 C-7900.0869 8297.3477 -7900.1001 8298.1719 -7900.6274 8298.0332 C-7900.6035 8297.8857 -7900.6436 8297.8301 -7900.7979 8297.8535 C-7901.0903 8298.1055 L-7901.4312 8298.0469 -7901.2842 8297.7705 -7901.2925 8297.5215 C-7901.4746 8297.5645 -7901.6973 8297.5527 -7901.7803 8297.7383 C-7902.0015 8297.4258 L-7901.8398 8297.6514 -7902.1514 8297.5762 -7902.2368 8297.6367 C-7902.1514 8297.5762 L-7902.1846 8297.4697 -7902.3955 8297.5352 -7902.5024 8297.5664 C-7902.4766 8297.7207 -7902.2617 8297.7832 -7902.1445 8297.8281 C-7902.2373 8297.9375 -7902.3823 8297.9121 -7902.5059 8298.041 C-7902.4648 8297.7969 -7902.8027 8297.8672 -7902.9473 8297.8418 C-7903.1133 8297.7891 -7903.1348 8298.0605 -7903.1831 8298.0527 C-7903.1875 8297.9258 -7903.4541 8298.0313 -7903.3247 8297.8535 C-7903.2681 8297.8125 -7903.1953 8297.9766 -7903.1016 8297.8652 C-7903.2109 8297.7705 -7903.1982 8297.5498 -7903.4258 8297.7109 C-7903.5967 8297.832 -7903.3818 8298.1934 -7903.7061 8298.0391 C-7903.6211 8297.9785 -7903.6055 8297.8809 -7903.5391 8297.793 C-7903.8433 8297.666 L-7903.8564 8297.8887 L-7903.8975 8297.832 -7903.8691 8297.8125 -7903.8877 8297.7832 C-7903.9785 8298.0176 -7904.3521 8297.8555 -7904.4209 8298.1191 C-7904.5742 8298.1426 -7904.7441 8297.9648 -7904.8906 8297.9395 C-7904.8623 8297.9199 L-7905.0415 8297.7891 -7905.2793 8297.875 -7905.4297 8298.0254 C-7905.4219 8297.9766 L-7905.5195 8297.959 -7905.7505 8297.9941 -7905.8735 8298.125 C-7906.1201 8297.957 -7905.9561 8297.2842 -7906.2295 8297.5645 C-7906.48 8297.5723 -7906.6221 8297.9727 -7906.5215 8298.1152 C-7906.9717 8297.9648 -7907.4834 8298.3281 -7907.9009 8297.9824 C-7907.9658 8298.0723 -7907.9248 8298.1289 -7908.0586 8298.1816 C-7908.7197 8298.0938 -7909.4551 8298.4453 -7909.9814 8298.0078 C-7909.79 8297.9141 -7909.9688 8297.7852 -7909.9727 8297.6582 C-7910.1309 8297.8574 -7910.1631 8297.4512 -7910.2197 8297.793 C-7910.2041 8297.9941 -7910.2197 8298.0918 -7910.0337 8298.1729 C-7910.4282 8298.2813 -7911.0283 8298.2813 -7911.2471 8298.0938 C-7911.1377 8298.1865 -7911.2227 8298.248 -7911.3086 8298.3086 C-7911.2803 8297.9873 -7911.5713 8297.9395 -7911.7915 8298.0527 C-7911.8223 8298.248 L-7911.9658 8298.0469 L-7912.0503 8298.1094 -7912.0591 8298.457 -7912.2773 8298.2695 C-7912.2891 8298.1934 -7912.3018 8298.1162 -7912.3418 8298.0605 C-7912.5693 8298.2207 -7912.8906 8298.4922 -7913.1377 8298.3262 C-7913.3398 8298.041 L-7913.4453 8298.0723 -7913.6235 8298.2441 -7913.4375 8298.3262 C-7913.8594 8298.1543 -7914.1309 8298.1328 -7914.2646 8297.8857 C-7914.9912 8298.4873 -7916.0459 8298.5117 -7916.8906 8298.4688 C-7916.8652 8298.3223 L-7917.0923 8298.1855 -7916.9834 8298.5781 -7917.1416 8298.4766 C-7917.0684 8298.3369 -7917.3145 8298.1729 -7917.1362 8298.002 C-7917.4609 8297.8477 -7917.5547 8298.2559 -7917.7656 8298.3223 C-7917.7979 8298.5146 -7917.5957 8298.1992 -7917.6367 8298.4434 C-7917.6729 8298.5117 -7918.0859 8298.293 -7918.1362 8298.584 C-7918.2178 8298.4697 -7918.1543 8298.2559 -7918.1104 8298.1377 C-7918.3086 8298.2793 L-7918.5513 8297.9395 -7917.7559 8297.6719 -7918.0107 8297.2529 C-7918.1934 8297.2988 L-7918.3682 8296.9941 -7917.71 8296.9551 -7918.1689 8296.8506 C-7918.3682 8296.9941 -7918.5381 8297.416 -7918.3608 8297.5449 C-7918.7754 8297.625 -7918.5527 8298.2383 -7918.9985 8298.2139 C-7919.1201 8298.043 -7918.6416 8298.1729 -7918.7275 8297.9336 C-7918.9375 8297.6992 -7919.1484 8298.0645 -7919.3354 8297.9824 C-7919.1279 8298.0918 -7919.3032 8298.3857 -7919.4375 8298.4395 C-7919.6641 8298.3018 -7919.29 8298.1641 -7919.6113 8298.1338 C-7919.6641 8298.3018 -7919.9595 8298.4277 -7919.7041 8298.5449 C-7919.8203 8298.9258 -7920.0381 8298.4395 -7920.2129 8298.7344 C-7920.3174 8298.4668 -7919.8823 8298.1152 -7920.2354 8297.9814 C-7920.1792 8298.2393 -7920.6704 8298.332 -7920.4839 8298.7148 C-7920.6221 8298.6406 -7920.6367 8298.4375 -7920.5361 8298.2793 C-7920.7334 8298.1201 -7921.0151 8298.75 -7921.0801 8298.2383 C-7921.1479 8298.502 L-7921.21 8298.416 -7921.2983 8298.3516 -7921.3994 8298.209 C-7921.5732 8298.2041 -7921.96 8298.5664 -7921.9443 8298.168 C-7922 8298.209 -7922.3975 8298.1914 -7922.2441 8298.4668 C-7921.9971 8298.6348 -7921.96 8298.2656 -7921.8223 8298.6377 C-7921.9971 8298.334 -7922.1787 8298.6777 -7922.3213 8298.7793 C-7922.3447 8298.625 L-7922.4297 8298.6855 -7922.6255 8298.6514 -7922.6787 8298.8184 C-7922.6133 8298.7305 -7922.6475 8298.625 -7922.7148 8298.5879 C-7922.8042 8298.8223 L-7923.1494 8298.9395 -7922.8857 8298.4102 -7923.2217 8298.4785 C-7922.9663 8298.2969 L-7923.0225 8298.3359 -7923.1367 8298.1162 -7923.2979 8298.1895 C-7923.3604 8298.4033 -7923.4775 8298.6602 -7923.5313 8298.8262 C-7923.7207 8298.9199 -7923.6162 8298.585 -7923.8027 8298.8047 C-7923.5586 8298.5469 L-7923.5215 8298.4766 -7923.7231 8298.1934 -7923.9761 8298.1992 C-7924.1377 8298.2734 -7924.3887 8298.582 -7924.1338 8298.6992 C-7924.2607 8298.7031 -7924.4385 8298.5723 -7924.3379 8298.416 C-7924.6255 8298.4902 -7924.2998 8298.6465 -7924.5479 8298.7793 C-7924.6494 8298.6367 -7924.9658 8298.4336 -7925.1563 8298.2266 C-7924.8975 8297.8682 L-7925.0693 8297.8652 L-7924.8467 8297.5781 -7925.1826 8297.6465 -7925.0566 8297.3438 C-7925.1743 8297.2969 -7925.3169 8297.3994 -7925.4307 8297.4785 C-7925.0864 8297.9629 -7925.8159 8298.1406 -7925.7158 8298.582 C-7926.1875 8298.7031 -7926.0107 8297.5078 -7926.5024 8298.1992 C-7926.4219 8298.3145 -7926.6533 8298.6504 -7926.3564 8298.5225 C-7926.6494 8298.4746 -7926.5557 8298.9658 -7926.9014 8298.7832 C-7926.6455 8298.6016 -7927.1763 8298.3359 -7926.8066 8298.0723 C-7926.8311 8298.2188 -7926.6001 8298.1836 -7926.5435 8298.1426 C-7926.6641 8297.9727 -7926.5186 8297.6973 -7926.8184 8297.6973 C-7927.0015 8297.7393 -7927.2524 8297.748 -7927.2158 8297.9785 C-7927.2085 8298.2314 -7926.9365 8297.9512 -7927.0537 8298.207 C-7927.4185 8298.2949 -7927.4795 8297.9102 -7927.6304 8298.3594 C-7927.3999 8298.3232 -7927.3423 8298.584 -7927.3467 8298.7578 C-7927.6143 8298.8633 L-7927.5625 8298.6953 L-7927.9922 8298.5742 -7927.6895 8299 -7928.1055 8298.9551 C-7928.3008 8298.623 L-7928.2017 8298.3369 -7927.6953 8298.75 -7927.7695 8298.2842 C-7928.04 8298.2656 -7928.1299 8298.502 -7928.3848 8298.3818 C-7928.3281 8298.3418 -7928.2505 8298.3301 -7928.1943 8298.2891 C-7928.2915 8298.2734 -7928.3877 8297.6563 -7928.7734 8298.0176 C-7928.9727 8298.1582 -7928.8262 8298.1836 -7928.8311 8298.3574 C-7929.2656 8298.4102 -7929.3955 8298.5879 -7929.6753 8298.6152 C-7929.6177 8298.2754 -7930.1699 8298.582 -7929.8608 8298.2344 C-7929.7188 8298.4336 -7929.0903 8298.4141 -7928.9365 8298.0898 C-7929.0947 8297.6865 -7928.5952 8298.1465 -7928.5024 8297.7383 C-7928.8506 8297.7285 -7928.8335 8297.332 -7928.8896 8297.0723 C-7928.9863 8297.0537 -7929.0801 8297.1641 -7929.1377 8297.2041 C-7929.1787 8297.4492 -7929.0522 8297.4453 -7929.0449 8297.6973 C-7929.4336 8297.6309 -7929.8081 8297.7676 -7930.0225 8298.0059 C-7930.1523 8297.8848 -7930.1113 8297.6406 -7929.9575 8297.6172 C-7930.4199 8297.6895 -7930.9141 8297.6563 -7931.3535 8297.582 C-7931.0693 8297.9814 -7931.8433 8297.6758 -7931.6494 8298.0078 C-7931.4141 8298.0977 -7931.2119 8298.3818 -7931.3418 8298.5605 C-7931.4888 8298.5352 -7931.3369 8298.3857 -7931.3984 8298.3008 C-7931.5859 8298.5186 -7931.6895 8297.9512 -7931.8735 8298.2949 C-7931.4512 8298.166 -7931.7915 8297.8086 -7931.7139 8297.4961 C-7932.0186 8297.6719 -7931.7007 8297.2734 -7932.0024 8297.2734 C-7932.3057 8297.4473 -7932.6787 8297.584 -7933.0161 8297.6514 C-7933.4399 8297.3555 -7934.0898 8297.6465 -7934.4683 8297.6582 C-7934.6665 8297.5 -7934.5322 8297.1465 -7934.7471 8297.085 C-7934.9995 8297.0918 -7934.5601 8297.4668 -7934.9336 8297.3047 C-7934.8975 8297.2344 L-7935.0107 8297.3164 -7935.5825 8296.9941 -7935.6929 8297.502 C-7935.5776 8297.1191 L-7935.6475 8297.084 -7935.7119 8297.1719 -7935.7695 8297.2129 C-7935.7725 8297.0879 -7935.8535 8296.9746 -7935.7402 8296.8926 C-7935.9707 8296.6289 -7936.2241 8296.9346 -7936.4746 8296.9453 C-7936.3135 8297.1719 L-7936.7422 8297.3496 -7937.0293 8297.125 -7937.4443 8297.2041 C-7937.4316 8296.9824 L-7937.6787 8297.1152 L-7937.6182 8296.9004 -7937.8447 8296.7617 -7937.9751 8296.9414 C-7937.3335 8296.3984 L-7937.1553 8296.5293 -7937.5283 8296.666 -7937.4165 8296.8848 C-7937.3213 8297.0762 -7936.9375 8297.0156 -7936.8755 8296.8018 C-7937.0225 8296.7773 -7937.0293 8296.8262 -7937.1436 8296.9063 C-7937.1919 8296.5977 -7936.9688 8296.6094 -7936.8584 8296.4033 C-7936.9355 8296.416 -7937.0449 8296.3223 -7937.0615 8296.4199 C-7936.9102 8296.2695 -7936.7578 8296.2461 -7936.5059 8296.2383 C-7936.6763 8296.3594 -7936.4131 8296.4297 -7936.4775 8296.5176 C-7936.4575 8296.2461 -7936.2168 8296.1621 -7935.9053 8296.2383 C-7935.6831 8296.5527 -7935.3208 8296.0361 -7934.96 8296.123 C-7935.1064 8296.3984 -7935.2935 8296.6191 -7935.5127 8296.7305 C-7935.2861 8296.8682 -7935.2607 8296.7227 -7935.0337 8296.8613 C-7934.9238 8296.6563 -7934.8457 8296.3418 -7934.5503 8296.2168 C-7934.5342 8296.4199 L-7934.2666 8296.3164 -7934.2666 8296.0156 -7933.9258 8296.0723 C-7933.3418 8296.1719 -7932.7407 8296.1719 -7932.2949 8296.1973 C-7932.2783 8296.3994 L-7932.0303 8295.9658 -7931.4521 8296.2393 -7931.1182 8296.0469 C-7930.5503 8296.2422 -7929.8848 8295.8535 -7929.5938 8296.2031 C-7928.5913 8296.0469 -7927.7148 8295.8945 -7926.6768 8295.9688 C-7926.8516 8296.2637 L-7926.6655 8296.0469 -7926.7305 8296.4336 -7926.5479 8296.3896 C-7926.7578 8296.1543 -7926.2949 8296.084 -7926.1665 8295.9033 C-7925.7041 8296.1328 -7925.1104 8295.8828 -7924.7007 8295.6758 C-7924.6846 8295.8789 L-7924.2705 8295.498 -7923.7759 8295.832 -7923.2598 8295.8945 C-7923.2007 8295.9785 -7923.1074 8296.1689 -7922.9536 8296.1465 C-7922.6738 8295.8184 -7922.5273 8295.8418 -7922.1167 8295.6367 C-7921.8169 8295.6367 -7921.3301 8295.7178 -7921.0254 8295.8457 C-7919.8975 8295.3848 -7918.7456 8295.6797 -7917.5732 8295.4023 C-7917.4888 8295.6406 L-7916.3521 8295.1309 -7914.9541 8295.5938 -7913.9839 8295.332 C-7914.0776 8295.7393 L-7913.7734 8295.8652 -7913.3843 8295.6328 -7913.4619 8295.3438 C-7913.1567 8295.4688 -7912.7007 8295.1465 -7912.5068 8295.4814 C-7912.1953 8295.5566 -7912.1255 8295.293 -7911.8662 8295.2383 C-7911.2422 8295.3926 -7911.0107 8295.3574 -7910.4224 8295.2813 C-7910.5684 8295.2559 L-7910.6328 8295.3457 -7910.6387 8295.5186 -7910.4922 8295.5449 C-7910.2725 8295.4316 -7909.6846 8295.6543 -7909.9033 8295.168 C-7909.2754 8295.4492 -7908.4385 8294.9395 -7907.8271 8295.3184 C-7907.8789 8295.1855 -7907.7246 8295.1602 -7907.6602 8295.0703 C-7907.1089 8295.0645 -7906.5293 8295.3359 -7906.0898 8295.1094 C-7906.0024 8295.1758 -7906.2295 8295.3359 -7906.0049 8295.3496 C-7905.8721 8295.2988 -7906.0024 8295.1758 -7905.8384 8295.1016 C-7904.9453 8294.8535 -7904.0303 8295.3574 -7903.2188 8295.293 C-7901.7754 8295.0361 -7900.2695 8295.166 -7898.8867 8295.123 C-7898.9023 8295.2207 L-7898.4395 8294.8477 -7897.8159 8295.6025 -7897.4463 8295.041 C-7897.3369 8295.1338 -7897.0283 8295.085 -7897.1094 8295.2734 C-7896.7407 8295.0098 -7896.0771 8295.5215 -7895.5439 8295.1865 C-7895.5928 8295.1777 -7895.6211 8295.1973 -7895.6777 8295.2393 C-7895.1392 8295.4551 -7894.6641 8295.1602 -7894.0957 8295.3555 C-7894.1533 8295.3975 -7894.2583 8295.4277 -7894.2754 8295.5254 C-7894.0557 8295.7129 -7893.7549 8295.1133 -7893.6348 8295.584 C-7893.5088 8295.5801 -7893.5449 8295.3477 -7893.6221 8295.3613 C-7892.3779 8295.5449 -7891.0498 8295.2441 -7889.7549 8295.1367 C-7888.8271 8295.418 -7889.6982 8295.9297 -7888.9663 8295.5781 C-7888.9063 8295.6689 -7888.9229 8295.3984 -7888.9131 8295.4961 C-7888.6299 8295.3643 -7888.4717 8296.0215 -7888.2754 8295.7754 C-7888.3564 8295.4863 -7888.1445 8295.6133 -7888.1387 8295.4375 C-7887.5713 8295.625 -7887.4575 8295.8857 -7887.0098 8295.666 C-7887.0435 8295.8184 L-7886.5186 8295.3887 -7885.9102 8295.6191 -7885.4673 8295.123 C-7882.5728 8295.0332 -7879.7983 8294.7578 -7876.9761 8294.7002 C-7874.1865 8294.7949 -7871.4551 8294.5723 -7868.6221 8294.8359 C-7867.9585 8295.2354 -7867.9087 8295.2246 -7867.1797 8295.0625 C-7867.2095 8295.127 -7867.2549 8295.1426 -7867.2061 8295.2031 C-7867.1699 8294.875 -7866.6929 8295.1719 -7866.6235 8294.8594 C-7865.5762 8294.9199 -7864.6113 8294.8301 -7863.5337 8294.8281 C-7863.7041 8294.8633 -7863.7896 8295.1309 -7863.5869 8295.1094 C-7863.3755 8294.9004 L-7863.3408 8294.9922 L-7863.2021 8294.9434 -7863.0513 8294.7813 -7863.1943 8294.6758 C-7860.4873 8294.3926 -7857.8242 8295.0508 -7855.1729 8294.9697 C-7854.5435 8295.1064 -7853.6475 8294.9814 -7852.9629 8294.9141 C-7850.9355 8295.3516 -7849.1079 8295.7041 -7847.0479 8295.3984 C-7847.3169 8296.2461 -7848.1675 8296.4414 Vf-7938.2578 8296.2422 m-7938.1855 8296.4063 -7937.9497 8296.4961 -7938.1377 8296.7148 C-7938.1611 8296.5605 -7938.2822 8296.3887 -7938.2578 8296.2422 Cf-7931.9619 8297.9297 m-7931.9536 8297.8809 -7931.8721 8297.9961 -7931.8521 8298.0225 C-7931.9297 8298.0352 -7932.0024 8298.1729 -7932.0645 8298.0879 C-7931.9854 8298.0762 -7931.9976 8297.998 -7931.9619 8297.9297 Cf-7930.3521 8298.0273 m-7930.3765 8298.1729 -7930.7207 8298.2891 -7930.9238 8298.3066 C-7930.3521 8298.0273 Lf-7928.8521 8298.6289 m-7928.7227 8298.752 -7928.7583 8298.8193 -7928.9326 8298.8154 C-7928.9453 8298.7383 -7928.8877 8298.6992 -7928.8521 8298.6289 Cf-7928.7456 8298.2969 m-7928.6211 8298.293 -7928.5591 8298.3789 -7928.4985 8298.4629 C-7928.5029 8298.3369 -7928.7871 8298.541 -7928.7456 8298.2969 Cf-7925.4893 8298.7207 m-7925.4111 8298.709 -7925.2417 8298.5879 -7925.1689 8298.75 C-7925.2505 8298.6367 -7925.5498 8298.9346 -7925.4893 8298.7207 Cf-7923.9761 8298.5 m-7923.9272 8298.5098 -7923.9072 8298.5361 -7923.8506 8298.4961 C-7923.7607 8298.5625 -7923.8555 8298.6689 -7923.9312 8298.6826 C-7923.9761 8298.5 Lf-7896.4287 8297.9141 m-7896.5923 8297.9863 L-7896.5684 8297.8418 L-7896.4287 8297.9141 Lf-7884.3574 8297.9063 m-7884.1943 8297.8145 -7884.2441 8298.043 -7884.2168 8298.0645 C-7884.3643 8298.0801 -7884.1621 8297.8848 -7884.3574 8297.9063 Cf-7877.8486 8297.1777 m-7877.8984 8297.1816 L-7877.8818 8296.8828 L-7877.8486 8297.1777 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 5)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7921 8299 m-7939 8299 L-7939 8281 L-7921 8281 L-7921 8299 Lnuu0 Ap0 O0 0 0 1 k-7928.5625 8299 m-7931.4375 8299 L-7931.4375 8290.5 L-7931.4375 8289.4316 -7930.5684 8288.5625 -7929.5 8288.5625 C-7920.9165 8288.5625 L-7920.9165 8291.4375 L-7928.5625 8291.4375 L-7928.5625 8299 L-7928.5625 8299 LfUu0.15 1 0.9 0.1 k-7929.2998 8299 m-7930.7002 8299 L-7930.7002 8290.5 L-7930.7002 8289.8389 -7930.1621 8289.3008 -7929.5 8289.3008 C-7920.9165 8289.3008 L-7920.9165 8290.7002 L-7929.2998 8290.7002 L-7929.2998 8299 L-7929.2998 8299 LfUu0 1 1 0 k-7929.6875 8299 m-7930.3125 8299 L-7930.3125 8290.5 L-7930.3125 8290.0527 -7929.9482 8289.6865 -7929.5 8289.6865 C-7920.9165 8289.6865 L-7920.9165 8290.3125 L-7929.5 8290.3125 L-7929.6035 8290.3125 -7929.6875 8290.3975 -7929.6875 8290.5 C-7929.6875 8299 L-7929.6875 8299 LfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 55)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7912.9727 8299 m-7912.9727 8272.9717 L-7939 8272.9717 L-7939 8299 L-7912.9727 8299 Ln0 Ap0 R0.7084 0.636438 0.515526 0.381872 K1.125 w-7939 8281.6465 m-7912.9727 8281.6465 lS0.64 0.650477 0.701045 0.510735 K-7939 8290.3242 m-7912.9727 8290.3242 lS0.597742 0.537865 0.64184 0.350469 K0.375 w-7939 8285.9854 m-7912.9727 8285.9854 lS0 O0.597742 0.537865 0.64184 0.350469 k1 w-7917.5742 8286.0117 m-7917.3442 8285.7402 -7917.6914 8285.4541 -7918 8285.2432 c-7918.1118 8285.166 -7918.5215 8285.3789 -7918.7466 8285.2129 c-7919.0439 8284.9951 -7919.1826 8284.9082 -7919.4824 8284.9141 c-7919.6455 8284.918 -7920.0435 8285.0479 -7920.1895 8285.0781 c-7920.5679 8285.1543 -7920.8022 8285.3516 -7921.3672 8285.2549 c-7921.7344 8285.1914 -7921.8286 8285.1006 -7921.9233 8285.1484 c-7922.1118 8285.29 -7922.2202 8285.5137 -7922.4258 8285.5625 c-7922.9575 8285.6895 -7923.3535 8285.7334 -7923.8818 8285.7227 c-7924.3047 8285.7129 -7925.4185 8285.7813 -7926.2866 8285.6816 c-7926.6226 8285.6416 -7926.6025 8285.2168 -7926.7695 8285.2129 c-7926.8618 8285.2109 -7926.7646 8285.5264 -7926.8306 8285.5469 c-7927.1694 8285.6533 -7927.4702 8284.5029 -7927.6943 8284.5723 c-7927.8047 8284.6074 -7927.5562 8285.1533 -7927.6729 8285.1816 c-7927.8975 8285.2373 -7928.2178 8284.2188 -7928.4321 8284.2813 c-7928.5635 8284.3184 -7928.2886 8284.7383 -7928.4375 8284.8066 c-7928.6655 8284.9111 -7928.9087 8284.0352 -7929.1064 8284.1338 C-7929.1543 8284.1816 -7928.7295 8284.9375 -7929.1685 8284.8789 c-7929.2871 8284.8613 -7929.5054 8284.3135 -7929.5801 8284.3398 c-7929.6919 8284.3799 -7929.3535 8284.8018 -7929.4897 8284.9277 C-7929.7681 8285.1543 -7930.3711 8284.1631 -7930.4575 8284.2344 c-7930.5791 8284.3359 -7930.1279 8285.0977 -7930.2695 8285.166 C-7930.4497 8285.4297 -7931.0142 8284.5527 -7931.0889 8284.6016 c-7931.1777 8284.6602 -7930.9058 8285.0381 -7930.8799 8285.2334 c-7930.8545 8285.4277 -7930.9966 8285.5615 -7931.2144 8285.5098 c-7931.4736 8285.4473 -7931.8696 8284.6416 -7931.9727 8284.7354 C-7932.0791 8284.791 -7931.8682 8285.0781 -7931.7954 8285.3125 c-7931.7583 8285.4277 -7931.8882 8285.6016 -7932.0298 8285.6016 c-7932.3135 8285.6494 -7932.6255 8284.998 -7932.7065 8285.1025 c-7932.7524 8285.1621 -7932.5898 8285.4902 -7932.7295 8285.5879 c-7932.8994 8285.7061 -7933.3115 8285.2383 -7933.4521 8285.293 C-7933.5361 8285.3418 -7933.4126 8285.5967 -7933.4927 8285.6533 c-7933.7295 8285.8193 -7934.0039 8285.4209 -7934.0513 8285.4688 C-7934.1167 8285.4912 -7934.1201 8285.5361 -7934.2793 8285.6406 c-7934.4736 8285.7676 -7934.5254 8285.8486 -7934.5425 8285.9648 c-7934.5654 8286.083 -7934.3135 8286.375 -7934.1655 8286.3496 c-7933.8223 8286.29 -7933.8662 8286.8496 -7933.6328 8286.7158 c-7933.5679 8286.6797 -7933.6592 8286.2588 -7933.4199 8286.2656 c-7933.0488 8286.2783 -7932.9858 8286.8213 -7932.7817 8286.8105 c-7932.6406 8286.8037 -7932.8521 8286.1836 -7932.6328 8286.2607 c-7932.4751 8286.3164 -7932.0063 8287.3018 -7931.9795 8287.21 c-7931.8975 8286.9424 -7932.0703 8286.3984 -7931.9409 8286.4082 c-7931.7568 8286.4229 -7931.5078 8287.3174 -7931.2544 8287.4375 c-7931.1826 8287.4727 -7931.3774 8286.6006 -7931.1958 8286.5967 C-7931.0898 8286.6465 -7930.7578 8287.4492 -7930.6274 8287.498 C-7930.5591 8287.4824 -7930.5879 8287.125 -7930.5176 8287.1045 c-7930.4688 8287.0898 -7930.2817 8287.5654 -7930.21 8287.5234 c-7930.1055 8287.4629 -7930.2471 8286.9922 -7930.0889 8286.9229 c-7929.9175 8286.8486 -7929.4878 8287.8926 -7929.3486 8287.7979 c-7929.2769 8287.75 -7929.3574 8287.21 -7929.21 8287.2461 c-7929.0718 8287.2783 -7928.9414 8287.6143 -7928.8081 8287.6426 c-7928.7295 8287.6582 -7928.7935 8287.1914 -7928.7495 8287.1738 c-7928.5889 8287.1152 -7928.2329 8287.6719 -7928.0688 8287.5234 c-7927.8584 8287.335 -7927.9395 8286.9697 -7927.8345 8286.9824 c-7927.6274 8287.0059 -7927.4912 8287.2432 -7927.4146 8287.1836 c-7927.2642 8287.0684 -7927.3281 8286.7793 -7927.0527 8286.6924 c-7926.8975 8286.6426 -7926.7935 8286.9346 -7926.7495 8286.9307 c-7926.6738 8286.9277 -7926.6782 8286.8301 -7926.6665 8286.7246 c-7926.6328 8286.4609 -7926.6064 8286.3994 -7926.4878 8286.377 c-7926.0854 8286.3535 -7925.5625 8286.2842 -7925.1807 8286.2754 c-7924.6274 8286.2607 -7923.2607 8286.2373 -7923.1182 8286.2373 c-7923 8286.2129 -7922.7432 8286.3945 -7922.6689 8286.4609 c-7922.4678 8286.6455 -7922.2998 8286.8594 -7921.9858 8287.1201 c-7921.8906 8287.2012 -7921.8081 8287.1807 -7921.7378 8287.1563 c-7921.5249 8287.085 -7921.4585 8287.0332 -7921.2202 8287.002 c-7920.9175 8286.959 -7920.4272 8287.0488 -7920.1245 8287.1426 c-7919.6035 8287.3018 -7919.5264 8287.3242 -7919.0977 8287.2754 c-7918.6992 8287.2295 -7918.0586 8287.1582 -7918.0479 8286.8105 c-7918.0415 8286.5957 -7917.9414 8286.4434 -7917.5742 8286.0117 cfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 56)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7912.9722 8299 m-7912.9722 8272.9727 L-7939 8272.9727 L-7939 8299 L-7912.9722 8299 Ln0 Ap0 R0.597742 0.537865 0.64184 0.350469 K0.375 w-7921.6455 8285.9893 m-7912.9736 8285.9893 lS-7925.9839 8299 m-7925.9839 8290.3242 lS0.7084 0.636438 0.515526 0.381872 K1.125 w-7921.7202 8281.6504 m-7912.9727 8281.6504 lS-7930.3232 8298.999 m-7930.3232 8289.6455 lS0.64 0.650477 0.701045 0.510735 K-7921.6504 8298.999 m-7921.6504 8296.5869 l-7918.9937 8296.3633 -7917.3096 8294.6602 v-7915.6064 8292.9336 -7915.3774 8290.3281 y-7912.9727 8290.3281 lS*u1 D0 O0.7084 0.636438 0.515526 0.381872 k1 w-7929.8418 8283.1855 m-7929.8418 8283.25 -7929.8218 8283.291 -7929.7783 8283.291 c-7929.6943 8283.291 -7929.4634 8282.9541 -7929.3994 8282.9541 c-7929.3154 8282.9541 -7929.2729 8282.9961 -7929.2729 8283.1016 c-7929.2729 8283.1855 -7929.5264 8284.0928 y-7929.5264 8284.1338 -7929.5264 8284.1338 -7929.5049 8284.1338 c-7929.4414 8284.1338 -7929.0615 8283.5869 -7928.9351 8283.5869 c-7928.9146 8283.5869 -7928.8936 8283.6074 -7928.8936 8283.6289 c-7929.1675 8284.5352 -7929.1675 8284.7256 v-7929.1675 8284.7891 -7929.1675 8284.8105 -7929.1465 8284.8105 c-7929.1055 8284.8105 -7928.6826 8284.2402 -7928.5562 8284.2402 c-7928.5352 8284.2402 -7928.5137 8284.2607 -7928.5137 8284.2822 c-7928.5137 8284.3457 -7928.7666 8285.084 -7928.7666 8285.252 c-7928.7666 8285.2949 -7928.7666 8285.2949 -7928.7446 8285.2949 c-7928.6826 8285.2949 -7928.4722 8285.084 -7928.4297 8285.084 c-7928.4082 8285.084 -7928.3882 8285.1055 -7928.3882 8285.126 c-7928.3882 8285.1465 -7928.4927 8285.5059 -7928.4927 8285.5898 c-7928.4927 8285.6113 -7928.4927 8285.6113 -7928.4722 8285.6113 c-7928.4297 8285.6113 -7928.0918 8285.252 -7928.0078 8285.252 c-7927.9658 8285.252 -7927.9233 8285.2949 -7927.9233 8285.3789 c-7927.9233 8285.5273 -7928.1138 8286.2441 -7928.1138 8286.2861 c-7928.1138 8286.3701 -7928.0918 8286.4121 -7928.0498 8286.4121 c-7927.9658 8286.4121 -7927.7119 8286.0957 -7927.6494 8286.0957 c-7927.5854 8286.0957 -7927.5439 8286.1162 -7927.5439 8286.1807 c-7927.5854 8286.6016 L-7927.5854 8286.666 -7927.5854 8286.6855 -7927.5654 8286.6855 c-7927.5225 8286.6855 -7927.2915 8286.3916 -7927.2065 8286.3916 c-7927.1006 8286.3916 -7927.1006 8286.877 -7927.1006 8286.9395 c-7927.1006 8287.0449 -7927.0166 8287.1289 -7926.8896 8287.1289 c-7926.8057 8287.1289 -7926.4678 8286.8975 -7926.4473 8286.8975 c-7926.3623 8286.8975 -7926.3198 8287.3398 -7926.2568 8287.3398 c-7926.1943 8287.3398 -7925.9199 8287.2129 -7925.8564 8287.2129 c-7925.6455 8287.2129 -7925.6035 8287.2988 -7925.6035 8287.4668 c-7925.6255 8287.6143 L-7925.6255 8287.6563 -7925.6035 8287.6563 -7925.5835 8287.6563 c-7925.4985 8287.6563 -7925.2241 8287.3818 -7925.1392 8287.3818 c-7924.9287 8287.3818 -7922.8198 8289.4492 -7922.5454 8289.7227 c-7922.3984 8289.8906 -7922.3984 8290.1865 -7922.3984 8290.3135 c-7922.3984 8291.1777 -7922.3984 8291.2617 -7922.2295 8291.3457 c-7921.5977 8291.5996 -7921.5127 8291.7471 -7920.7334 8293.0332 c-7920.6479 8293.1807 -7919.7407 8293.793 -7919.5942 8293.793 c-7919.4878 8293.793 -7919.1094 8293.5391 -7919.0239 8293.5391 c-7918.9194 8293.5391 -7918.8135 8293.6025 -7918.8135 8293.7705 c-7918.8135 8294.2139 -7919.3408 8294.7207 -7919.9312 8294.7207 c-7920.7534 8294.7207 -7921.0913 8294.0234 -7921.1338 8293.625 c-7921.1543 8293.4766 -7921.2393 8293.3916 -7921.3447 8293.3916 c-7921.3862 8293.3916 -7921.4287 8293.4121 -7921.4702 8293.4766 c-7921.9561 8294.2773 -7922.9473 8294.7207 -7923.7065 8294.7207 c-7924.7393 8294.7207 -7925.8774 8294.0879 -7926.3418 8293.8145 c-7926.7842 8293.5615 -7927.4814 8293.3916 -7927.8809 8293.3916 c-7928.3242 8293.3916 -7928.3662 8293.5391 -7928.3662 8293.793 c-7928.3662 8293.9404 -7927.9023 8294.3818 -7927.9023 8294.5098 c-7927.9023 8294.6357 -7928.0498 8294.7207 -7928.4082 8294.7207 c-7928.8936 8294.7207 -7929.5679 8294.0029 -7929.5679 8293.2236 c-7929.5679 8292.6113 -7928.7666 8292.085 -7928.3022 8292.085 c-7927.3755 8292.085 -7927.0942 8292.4434 -7926.5264 8292.9072 c-7926.4414 8292.9697 -7926.3774 8292.9922 -7926.3359 8292.9922 c-7926.1895 8292.9922 -7926.1895 8291.8945 -7926.1895 8291.7695 c-7926.1895 8291.6201 -7926.2729 8291.5576 -7926.3774 8291.5576 c-7928.7822 8291.5576 -7933.6592 8290.334 -7935.3672 8284.1777 c-7935.4297 8283.9658 -7935.5361 8283.8613 -7935.6406 8283.8613 c-7935.7881 8283.8613 -7936.7793 8284.7041 -7936.7793 8286.2861 c-7936.7793 8288.1201 -7935.5767 8289.0898 -7934.9873 8289.0898 c-7934.8398 8289.0898 -7934.6494 8289.0693 -7934.6494 8288.9209 c-7934.6494 8288.8584 -7934.6929 8288.7949 -7934.7759 8288.6895 c-7935.1143 8288.3535 -7935.3672 8287.7197 -7935.3672 8287.4033 c-7935.3672 8287.1914 -7935.2607 8287.0234 -7935.1143 8287.0234 c-7934.9033 8287.0234 -7934.5654 8287.9727 -7934.46 8288.1201 c-7934.3335 8288.3311 -7933.9546 8288.7109 -7933.2378 8289.2383 c-7932.4995 8289.7637 -7931.0654 8291.0723 -7931.0654 8292.3369 c-7931.0654 8293.709 -7932.1191 8294.6152 -7932.9209 8294.6152 c-7933.7007 8294.6152 -7934.6714 8294.0879 -7935.0713 8293.6025 c-7935.7041 8292.8652 -7936.3154 8292.2949 -7936.8218 8292.2949 c-7937.1592 8292.2949 -7937.3066 8292.5059 -7937.3066 8292.7168 c-7937.3066 8293.0537 -7937.0537 8293.2861 -7936.5479 8293.3281 c-7935.9575 8293.3711 -7935.8936 8293.793 -7935.8936 8294.1289 c-7935.8936 8294.4033 -7936.4209 8294.7207 -7936.8433 8294.7207 c-7937.4751 8294.7207 -7938.2974 8294.0234 -7938.2974 8292.1904 c-7938.2974 8290.6924 -7937.0537 8290.2295 -7936.5679 8290.2295 c-7936.1265 8290.2295 -7935.4722 8290.3135 -7935.0928 8290.6504 c-7933.8066 8291.8535 -7933.1318 8292.0625 -7932.5835 8292.0625 c-7932.3721 8292.0625 -7932.2881 8292.0625 -7932.2881 8292.2109 c-7932.2881 8292.5273 -7933.0474 8292.7168 -7933.1318 8292.7383 c-7933.3423 8292.8008 -7933.5103 8293.0332 -7933.5103 8293.2441 c-7933.5103 8293.7295 -7933.2378 8293.75 -7932.8774 8293.75 c-7932.5215 8293.75 -7931.8042 8293.3916 -7931.8042 8292.1904 c-7931.8042 8291.1992 -7932.9424 8290.0391 -7933.4058 8289.8076 c-7933.7007 8289.6377 -7934.5874 8289.6602 -7934.9458 8289.6172 c-7935.6406 8289.5322 -7937.4121 8288.585 -7937.4121 8286.0957 c-7937.4336 8284.6826 -7936.1265 8283.3555 -7935.8511 8283.166 c-7935.6826 8283.0586 -7935.5986 8282.9326 -7935.5986 8282.7637 c-7935.5986 8282.5527 -7935.6626 8279.6221 -7935.9995 8279.6221 c-7936.4424 8279.6221 -7936.5054 8279.6221 -7936.5054 8279.8135 c-7936.21 8280.9082 -7936.21 8281.1406 v-7936.21 8281.457 -7936.4424 8282.9326 -7937.3066 8282.9326 c-7937.5806 8282.9326 -7938.0449 8282.7002 -7938.0449 8282.3848 c-7938.0449 8282.0898 -7937.3486 8280.8877 -7937.3486 8280.6133 c-7937.3486 8280.1279 -7937.3921 8280.1074 -7938.0654 8279.4961 c-7938.2559 8279.3486 -7938.3193 8279.2227 -7938.3193 8279.0313 c-7938.3193 8278.8633 -7938.2134 8278.7354 -7938.0449 8278.7354 c-7937.8975 8278.7354 -7937.3281 8279.0117 -7937.2017 8279.0313 c-7937.0752 8279.0313 -7936.8433 8279.0527 -7936.6538 8279.0527 c-7936.2734 8279.0527 -7936.0845 8278.9258 -7936.0845 8278.7998 c-7936.0845 8278.5674 -7936.0845 8277.8936 -7936.9263 8276.4375 c-7937.1167 8276.1006 -7938.2974 8274.7725 -7938.2974 8274.4346 c-7938.2974 8274.2656 -7938.2134 8274.2461 -7938.1089 8274.2461 c-7937.9185 8274.2461 -7937.4966 8274.667 -7937.3706 8274.8145 c-7936.1265 8276.1426 -7935.3042 8277.5762 -7934.9238 8278.8418 c-7934.8398 8279.1582 -7934.7344 8279.0742 -7934.5654 8279.0957 c-7932.4155 8279.6016 -7930.3271 8282.1104 -7930.3271 8282.1318 c-7930.4326 8282.4053 -7930.4326 8282.4688 v-7930.4326 8282.5957 -7930.3271 8282.6172 -7930.3057 8282.6172 c-7930.2432 8282.6172 -7930.0527 8282.4053 -7930.0103 8282.4053 c-7929.9058 8282.4053 -7929.7783 8282.4902 -7929.7783 8282.6377 C-7929.8418 8283.1855 lf0 D-7933.1104 8281.6895 m-7932.5215 8281.6895 -7932.0986 8281.7949 -7931.6982 8282.0684 c-7931.6553 8282.0898 -7931.6138 8282.1104 -7931.5928 8282.1104 c-7931.5498 8282.1104 -7931.5498 8282.0898 -7931.5498 8282.0469 c-7931.5498 8281.626 -7933.4272 8279.666 -7934.5654 8279.666 c-7934.6289 8279.666 -7934.6714 8279.707 -7934.6714 8279.7695 c-7934.6714 8279.96 -7934.5874 8281.9629 -7934.2495 8281.9629 c-7934.1865 8281.9629 -7934.1016 8281.9414 -7934.0386 8281.9004 c-7933.7007 8281.752 -7933.4902 8281.6895 -7933.1104 8281.6895 cf-7932.5835 8284.4512 m-7932.5835 8284.0293 -7932.5625 8283.5654 -7931.8662 8283.5654 c-7931.2334 8283.5654 -7930.6431 8284.2197 -7930.4961 8284.3672 c-7930.4326 8284.4092 -7930.3906 8284.4297 -7930.3486 8284.4297 c-7930.3271 8284.4297 -7930.2847 8284.3877 -7930.2847 8284.3457 c-7930.2847 8283.9023 -7931.6553 8282.2373 -7933.0049 8282.2373 c-7933.2578 8282.2373 -7934.2705 8282.4053 -7934.2705 8282.9541 c-7934.2705 8283.207 -7933.8906 8284.5781 -7933.2793 8285.6533 c-7931.9087 8288.1416 -7927.7119 8289.7002 -7925.8145 8289.7002 c-7924.9072 8289.7227 -7924.6118 8289.4063 -7924.4863 8289.3848 c-7924.4648 8289.3848 -7924.4438 8289.3643 -7924.4233 8289.3643 c-7924.3174 8289.3643 -7924.1904 8289.4277 -7924.1904 8289.5752 c-7924.1904 8289.5967 -7924.2119 8289.5967 v-7924.3594 8290.7344 -7924.4014 8291.1357 -7924.4014 8292.3994 c-7924.4014 8293.793 -7924.4014 8293.9189 -7923.4321 8293.9189 c-7922.1455 8293.9189 -7921.8506 8292.8438 -7921.8506 8292.6113 c-7921.8506 8292.1904 -7922.4399 8291.8945 -7922.5889 8291.8945 c-7922.7358 8291.8945 -7922.9058 8292.002 -7922.9058 8292.1904 c-7922.9058 8292.4854 -7922.9473 8292.6328 -7923.2207 8292.6328 c-7923.4951 8292.6328 -7923.4951 8292.2744 -7923.4951 8292.168 c-7923.4951 8291.916 -7923.3896 8291.6631 -7923.1782 8291.5361 c-7922.7998 8291.2832 -7922.7998 8290.8828 -7922.7998 8290.6719 c-7922.7998 8290.5664 -7922.7998 8290.4395 -7922.8198 8290.334 c-7922.8418 8290.166 -7924.7817 8288.1201 -7925.0977 8288.1201 c-7925.2446 8288.1201 -7925.5615 8288.2666 -7926.4258 8288.2666 c-7928.5767 8288.2666 -7929.5474 8286.5391 -7929.7378 8286.0117 c-7929.9897 8285.2949 -7930.7915 8284.999 -7931.0225 8284.999 c-7931.2129 8284.999 -7931.2129 8285.042 -7931.2129 8285.4424 c-7931.2129 8285.5273 -7931.4238 8285.8633 y-7931.4238 8286.0537 -7930.3906 8286.3066 -7930.3906 8286.4961 c-7930.3906 8286.666 -7930.5801 8286.6855 -7930.7271 8286.6855 c-7930.8115 8286.6855 -7931.8882 8286.6855 -7932.3306 8285.8633 c-7932.5415 8285.4629 -7932.5835 8284.8945 -7932.5835 8284.4512 cf1 D-7928.4927 8282.1953 m-7928.4927 8282.1514 -7928.5137 8282.1318 -7928.5352 8282.1318 c-7928.5986 8282.1318 -7928.7666 8282.4688 -7928.8506 8282.4688 c-7928.9146 8282.4688 -7928.9995 8282.3848 -7929.0415 8282.2783 c-7929.0615 8282.1953 -7929.1255 8281.7305 -7929.21 8281.7305 c-7929.2524 8281.7305 -7929.4209 8281.9629 -7929.4634 8281.9629 c-7929.6104 8281.9629 -7929.7158 8281.7305 -7929.7158 8281.5215 c-7929.7158 8281.415 -7929.7783 8281.415 -7929.9263 8281.415 c-7930.5166 8281.415 -7932.1406 8279.2432 -7932.5625 8277.4922 c-7932.6055 8277.3242 -7932.5835 8277.1768 -7932.8994 8277.0703 c-7935.0713 8276.334 -7937.5176 8274.1816 -7937.5176 8274.0557 c-7937.5176 8273.9082 -7937.4336 8273.8242 -7937.3066 8273.8242 c-7937.2432 8273.8242 -7937.1592 8273.8242 -7936.6538 8274.1602 c-7935.7681 8274.751 -7933.7217 8276.0381 -7932.8994 8276.0381 c-7932.6265 8276.0381 -7932.6055 8275.6797 -7932.6055 8275.4258 c-7932.6055 8275.2354 -7932.6265 8275.0039 -7932.6265 8274.8574 c-7932.6465 8274.583 -7932.9634 8274.2656 -7932.9634 8274.0977 c-7932.9634 8273.9502 -7932.8154 8273.8447 -7932.6465 8273.8447 c-7932.4575 8273.8447 -7932.3306 8273.8662 -7932.1606 8274.0557 c-7931.8662 8274.3926 -7931.7402 8274.541 -7931.4238 8274.541 c-7931.1914 8274.541 -7930.1377 8273.8242 -7929.8838 8273.8242 c-7929.5679 8273.8242 -7929.1895 8274.3086 -7929.1895 8274.6045 c-7929.1895 8275.3418 -7930.0942 8275.9326 -7930.6431 8275.9326 c-7931.0225 8275.9326 -7931.4438 8275.8066 -7931.6353 8275.5742 c-7931.6982 8275.5098 -7931.7607 8275.4688 -7931.8242 8275.4688 c-7931.9937 8275.4688 -7932.1191 8275.9326 -7932.1191 8275.9746 c-7932.1191 8276.3975 -7929.2729 8276.459 -7928.9146 8276.459 c-7928.7666 8276.459 -7928.6401 8276.375 -7928.5352 8276.2061 c-7928.3447 8275.9121 -7927.1855 8274.6895 -7925.6255 8274.6895 c-7923.79 8274.6895 -7922.0825 8275.9521 -7922.0825 8277.8506 c-7922.0825 8277.957 -7922.1245 8278.5039 -7922.1245 8278.5264 c-7922.1245 8278.5898 -7921.0063 8280.3389 -7919.6782 8280.3389 c-7918.6245 8280.3389 -7918.2656 8279.75 -7918.2656 8279.2637 c-7918.2656 8279.0313 -7918.3711 8278.3789 -7918.8984 8278.3789 c-7919.1094 8278.3789 -7919.2144 8278.5898 -7919.2144 8278.9688 c-7919.2144 8279.0527 -7919.0039 8279.4326 -7919.0039 8279.5381 c-7919.0039 8279.5801 -7919.0239 8279.6016 -7919.0879 8279.6016 c-7919.4258 8279.6016 -7919.9521 8279.2432 -7920.1846 8278.5898 c-7920.4595 8277.873 -7920.8594 8277.1768 -7921.1958 8276.7754 c-7921.5127 8276.418 -7921.6182 8275.8262 -7921.6182 8275.4893 c-7921.6182 8275.0039 -7921.1338 8273.8447 -7919.4878 8273.8447 c-7918.2871 8273.8447 -7917.4434 8274.583 -7917.4434 8275.1943 c-7917.4434 8275.8066 -7917.7598 8276.1855 -7918.2026 8276.1855 c-7918.6455 8276.1855 -7918.9824 8275.8477 -7918.9824 8275.5098 c-7918.9824 8274.8359 -7919.1514 8274.6895 -7919.4878 8274.6895 c-7919.6992 8274.6895 -7919.8896 8274.8145 -7919.8896 8275.1309 c-7919.8896 8275.3633 -7919.8896 8275.7422 -7918.3711 8277.0078 c-7917.8857 8277.4082 -7917.4214 8278.1055 -7917.4214 8278.8848 c-7917.4214 8279.6445 -7918.4561 8280.8447 -7919.6362 8280.8447 c-7920.8594 8280.8447 -7921.6401 8280.0654 -7922.2515 8279.3486 c-7922.5454 8279.0117 -7923.9814 8277.3242 -7924.0439 8277.3018 c-7924.2334 8277.1543 -7924.3174 8277.0293 -7924.3174 8276.9023 c-7924.3174 8276.7969 -7924.2119 8276.6914 -7924.0854 8276.6914 c-7923.8535 8276.6914 -7922.9058 8277.6406 -7922.8198 8277.6406 c-7922.7568 8277.6406 -7922.7153 8277.5762 -7922.7153 8277.4922 c-7922.7153 8276.7334 -7923.8535 8275.2578 -7925.6255 8275.2578 c-7927.1006 8275.2578 -7927.9863 8276.375 -7927.9863 8276.418 c-7927.9863 8276.5439 -7927.8394 8276.6689 -7927.5225 8276.7334 c-7923.6426 8277.4717 -7920.3955 8281.0215 -7920.3955 8285.6377 c-7920.3955 8285.7441 -7920.2256 8285.7705 -7920.0786 8285.7705 c-7919.7202 8285.7705 -7919.0879 8285.8496 -7919.0879 8285.5762 c-7919.0879 8285.4697 -7919.1294 8285.3438 -7919.1934 8285.2168 c-7919.5518 8284.6465 -7919.8682 8284.4727 -7919.8682 8283.5215 c-7919.8682 8283.0586 -7919.4878 8282.5322 -7918.8984 8282.5322 c-7917.8657 8282.5322 -7917.4214 8283.5654 -7917.4214 8283.7969 c-7917.4214 8283.9658 -7917.5073 8284.0293 -7917.5903 8284.0293 c-7917.7178 8284.0293 -7918.2241 8283.502 -7918.3711 8283.502 c-7918.5615 8283.502 -7918.7085 8283.5439 -7918.7085 8284.0293 c-7918.7085 8284.3672 -7917.4214 8288.0781 -7917.4214 8288.8789 c-7917.4214 8289.4492 -7917.7598 8290.1455 -7918.6455 8290.6504 c-7918.6875 8290.6719 -7918.7085 8290.6924 -7918.7085 8290.7344 c-7918.7085 8290.8184 -7918.5615 8290.9248 -7918.4126 8290.9658 c-7917.8018 8291.1357 -7917.4214 8291.2412 -7917.4214 8292.1904 c-7917.4214 8292.5488 -7917.7598 8293.2236 -7918.0127 8293.2236 c-7918.2026 8293.2236 -7918.2026 8293.1807 -7918.2026 8292.8223 c-7918.2026 8292.6748 -7918.2446 8292.5693 -7918.3926 8292.4639 c-7918.7085 8292.2529 -7918.7295 8292.2109 -7918.8135 8291.7266 c-7918.8774 8291.4102 -7919.0039 8291.3242 -7920.1426 8290.6924 c-7920.5854 8290.4189 -7920.6904 8290.1865 -7920.7744 8289.9551 c-7920.8594 8289.7637 -7920.9233 8289.7637 -7921.4287 8289.7637 c-7921.9561 8289.7637 -7924.5073 8287.0449 -7924.5073 8286.918 c-7924.5073 8286.8555 -7924.3809 8286.5596 -7924.3809 8286.4961 c-7924.3809 8286.4336 -7924.4014 8286.3916 -7924.4438 8286.3916 c-7924.4863 8286.3916 -7924.6338 8286.6016 -7924.6758 8286.6016 c-7924.7817 8286.6016 -7924.7817 8286.4121 -7924.7817 8286.2637 c-7924.7817 8286.1602 -7924.5703 8285.5898 -7924.5703 8285.4424 c-7924.5703 8285.3584 -7924.5918 8285.2949 -7924.6338 8285.2949 c-7924.7178 8285.2949 -7924.9072 8285.7578 -7924.9922 8285.7578 c-7925.0342 8285.7578 -7925.0762 8285.7168 -7925.0762 8285.5898 c-7925.0762 8285.4424 -7924.8862 8284.7256 y-7924.8862 8284.6621 -7924.9072 8284.5566 -7924.9502 8284.5566 c-7925.0342 8284.5566 -7925.1826 8284.957 -7925.2666 8284.957 c-7925.3286 8284.957 -7925.3926 8284.873 -7925.3926 8284.7256 c-7925.3926 8284.6406 -7925.2446 8284.2197 -7925.2446 8284.1143 c-7925.2446 8284.0508 -7925.2666 8283.9863 -7925.3086 8283.9863 c-7925.3506 8283.9863 -7925.5835 8284.5996 -7925.7095 8284.5996 c-7925.7935 8284.5996 -7925.8994 8284.4922 -7925.8994 8284.3877 c-7925.8994 8284.3037 -7925.7729 8283.9453 -7925.7729 8283.8613 c-7925.7729 8283.8184 -7925.7729 8283.7969 -7925.7935 8283.7969 c-7925.8774 8283.7969 -7926.0254 8284.2822 -7926.1104 8284.2822 c-7926.3418 8284.2822 -7926.3623 8283.8613 -7926.3623 8283.6709 c-7926.3623 8283.5869 -7926.2998 8283.25 -7926.2998 8283.1855 c-7926.2998 8283.123 -7926.3198 8283.1016 -7926.3418 8283.1016 c-7926.4897 8283.1016 -7926.6782 8283.9023 -7926.8271 8283.9023 c-7927.0386 8283.9023 -7927.0386 8283.7129 -7927.0386 8283.4814 c-7927.0166 8282.9541 L-7927.0166 8282.9326 -7927.0386 8282.9121 y-7927.0586 8282.9121 -7927.1006 8282.9326 -7927.1226 8282.9961 c-7927.1855 8283.207 -7927.3115 8283.6289 -7927.5225 8283.6289 c-7927.6694 8283.6289 -7927.8174 8283.46 -7927.8174 8283.3135 c-7927.8174 8283.0801 -7927.7119 8282.7002 -7927.7119 8282.4688 c-7927.7119 8282.4053 -7927.7334 8282.3848 -7927.7754 8282.3848 c-7927.8608 8282.3848 -7927.9863 8282.8262 -7928.0278 8282.9121 c-7928.0918 8282.9961 -7928.1553 8283.0176 -7928.2192 8283.0176 c-7928.5352 8283.0176 -7928.5352 8282.7002 -7928.5352 8282.5527 C-7928.4927 8282.1953 lf0 D-7929.8633 8277.8301 m-7929.8633 8277.5977 -7931.8042 8277.4082 -7931.8662 8277.4082 c-7931.9722 8277.4082 -7932.0352 8277.4717 -7932.0352 8277.5762 c-7932.0352 8278.4414 -7930.2847 8280.6768 -7929.8633 8280.6768 c-7929.7998 8280.6768 -7929.7783 8280.6563 -7929.7783 8280.5928 c-7930.2002 8279.3486 -7930.2002 8279.0957 v-7930.2002 8278.7158 -7930.0942 8278.4629 -7929.9058 8278.041 c-7929.8838 8277.957 -7929.8633 8277.8936 -7929.8633 8277.8301 cf-7921.1338 8289.2793 m-7920.9858 8289.2793 -7920.4795 8288.7744 -7920.3325 8288.7744 c-7920.2065 8288.7744 -7920.0791 8288.8584 -7920.0791 8289.0059 c-7920.0791 8289.0898 -7920.2695 8289.5322 -7920.2695 8289.6377 c-7920.2695 8289.9961 -7919.8896 8290.293 -7919.5098 8290.293 c-7919.1094 8290.293 -7917.9702 8289.9756 -7917.9702 8288.752 c-7917.9702 8287.6563 -7918.3926 8287.6563 -7920.0366 8287.6563 c-7920.3955 8287.6563 -7922.0615 8287.8457 -7922.3145 8287.8457 c-7922.4399 8287.8457 -7922.4834 8287.6768 -7922.4834 8287.5498 c-7922.4834 8287.5088 -7922.4834 8287.4668 -7922.4614 8287.4453 c-7922.3984 8287.0664 -7922.1675 8286.5176 -7922.1675 8286.1377 c-7922.1675 8281.6895 -7926.2998 8277.8301 -7928.7666 8277.8301 c-7929.4209 8277.8301 -7929.6519 8278.6318 -7929.6519 8279.0527 c-7929.6519 8280.7822 -7927.6694 8281.8145 -7927.4175 8281.8145 c-7927.3545 8281.8145 -7927.3335 8281.7949 -7927.3335 8281.752 c-7927.3335 8281.71 -7927.3545 8281.668 -7927.3975 8281.626 c-7927.5225 8281.457 -7928.0498 8280.8447 -7928.0498 8280.2129 c-7928.0498 8279.875 -7927.7554 8279.4326 -7926.9951 8279.4326 c-7925.7305 8279.4326 -7925.1826 8280.7822 -7925.1826 8281.1406 c-7925.1826 8281.2891 -7925.2446 8281.499 -7925.4561 8281.499 c-7925.6035 8281.499 -7926.0049 8280.8447 -7926.1519 8280.8447 c-7926.2158 8280.8447 -7926.4473 8280.9717 -7926.5103 8280.9717 c-7926.5942 8280.9717 -7926.6582 8280.9512 -7926.7422 8280.9512 c-7926.8057 8280.9512 -7926.8481 8281.0137 -7926.8481 8281.1191 c-7926.8481 8281.4785 -7926.3623 8282.0469 -7925.8774 8282.3008 c-7924.9722 8282.7637 -7923.6226 8284.0928 -7923.6226 8285.5479 c-7923.6226 8285.9688 -7923.6846 8286.3701 -7923.6846 8286.707 c-7923.6846 8287.2559 -7922.7568 8288.1201 -7921.8081 8289.0059 c-7921.6401 8289.1533 -7921.3862 8289.2793 -7921.1338 8289.2793 cf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 57)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7912.9722 8299 m-7912.9722 8272.9727 L-7939 8272.9727 L-7939 8299 L-7912.9722 8299 Ln0 Ap0 R0.597742 0.537865 0.64184 0.350469 K0.375 w-7921.6455 8285.9893 m-7912.9736 8285.9893 lS-7925.9839 8299 m-7925.9839 8290.3242 lS0.64 0.650477 0.701045 0.510735 K1.125 w-7921.7202 8281.6504 m-7912.9727 8281.6504 lS-7930.3232 8299 m-7930.3232 8289.6455 lS0.7084 0.636438 0.515526 0.381872 K-7921.6504 8299 m-7921.6504 8296.5869 l-7918.9937 8296.3633 -7917.3096 8294.6602 v-7915.6064 8292.9336 -7915.3774 8290.3281 y-7912.9727 8290.3281 lS*u0 O0.7084 0.636438 0.515526 0.381872 k1 w-7929.7783 8282.6377 m-7929.7783 8282.4902 -7929.9058 8282.4053 -7930.0103 8282.4053 c-7930.0527 8282.4053 -7930.2432 8282.6172 -7930.3057 8282.6172 c-7930.3271 8282.6172 -7930.4326 8282.5957 -7930.4326 8282.4688 c-7930.4326 8282.4053 -7930.3271 8282.1318 y-7930.3271 8282.1104 -7932.4155 8279.6016 -7934.5654 8279.0957 c-7934.7344 8279.0742 -7934.8398 8279.1582 -7934.9238 8278.8418 c-7935.3042 8277.5762 -7936.1265 8276.1426 -7937.3706 8274.8145 c-7937.4966 8274.668 -7937.9185 8274.2461 -7938.1089 8274.2461 c-7938.2134 8274.2461 -7938.2974 8274.2656 -7938.2974 8274.4346 c-7938.2974 8274.7725 -7937.1167 8276.1006 -7936.9263 8276.4375 c-7936.0845 8277.8936 -7936.0845 8278.5674 -7936.0845 8278.7998 c-7936.0845 8278.9258 -7936.2734 8279.0527 -7936.6538 8279.0527 c-7936.8433 8279.0527 -7937.0752 8279.0313 -7937.2017 8279.0313 c-7937.3281 8279.0117 -7937.8975 8278.7354 -7938.0449 8278.7354 c-7938.2134 8278.7354 -7938.3193 8278.8633 -7938.3193 8279.0313 c-7938.3193 8279.2227 -7938.2559 8279.3486 -7938.0654 8279.4961 c-7937.3921 8280.1074 -7937.3486 8280.1279 -7937.3486 8280.6133 c-7937.3486 8280.8877 -7938.0449 8282.0898 -7938.0449 8282.3848 c-7938.0449 8282.7002 -7937.5806 8282.9326 -7937.3066 8282.9326 c-7936.4424 8282.9326 -7936.21 8281.457 -7936.21 8281.1406 c-7936.21 8280.9082 -7936.5054 8279.8135 y-7936.5054 8279.6221 -7936.4424 8279.6221 -7935.9995 8279.6221 c-7935.6626 8279.6221 -7935.5986 8282.5527 -7935.5986 8282.7637 c-7935.5986 8282.9326 -7935.6826 8283.0586 -7935.8511 8283.166 c-7936.1265 8283.3555 -7937.4336 8284.6826 -7937.4121 8286.0957 c-7937.4121 8288.585 -7935.6406 8289.5322 -7934.9458 8289.6172 c-7934.5874 8289.6602 -7933.7007 8289.6377 -7933.4058 8289.8076 c-7932.9424 8290.0391 -7931.8042 8291.1992 -7931.8042 8292.1904 c-7931.8042 8293.3916 -7932.5215 8293.75 -7932.8774 8293.75 c-7933.2378 8293.75 -7933.5103 8293.7295 -7933.5103 8293.2441 c-7933.5103 8293.0332 -7933.3423 8292.8008 -7933.1318 8292.7383 c-7933.0474 8292.7168 -7932.2881 8292.5273 -7932.2881 8292.2109 c-7932.2881 8292.0625 -7932.3721 8292.0625 -7932.5835 8292.0625 c-7933.1318 8292.0625 -7933.8066 8291.8535 -7935.0928 8290.6504 c-7935.4722 8290.3135 -7936.1265 8290.2295 -7936.5679 8290.2295 c-7937.0537 8290.2295 -7938.2974 8290.6924 -7938.2974 8292.1904 c-7938.2974 8294.0234 -7937.4751 8294.7207 -7936.8433 8294.7207 c-7936.4209 8294.7207 -7935.8936 8294.4033 -7935.8936 8294.1289 c-7935.8936 8293.793 -7935.9575 8293.3711 -7936.5479 8293.3281 c-7937.0537 8293.2861 -7937.3066 8293.0537 -7937.3066 8292.7168 c-7937.3066 8292.5059 -7937.1592 8292.2949 -7936.8218 8292.2949 c-7936.3154 8292.2949 -7935.7041 8292.8652 -7935.0713 8293.6025 c-7934.6714 8294.0879 -7933.7007 8294.6152 -7932.9209 8294.6152 c-7932.1191 8294.6152 -7931.0654 8293.709 -7931.0654 8292.3369 c-7931.0654 8291.0723 -7932.4995 8289.7637 -7933.2378 8289.2383 c-7933.9546 8288.7109 -7934.3335 8288.3311 -7934.46 8288.1201 c-7934.5654 8287.9727 -7934.9033 8287.0234 -7935.1143 8287.0234 c-7935.2607 8287.0234 -7935.3672 8287.1914 -7935.3672 8287.4033 c-7935.3672 8287.7197 -7935.1143 8288.3535 -7934.7759 8288.6895 c-7934.6929 8288.7949 -7934.6494 8288.8584 -7934.6494 8288.9209 c-7934.6494 8289.0693 -7934.8398 8289.0898 -7934.9873 8289.0898 c-7935.5767 8289.0898 -7936.7793 8288.1201 -7936.7793 8286.2861 c-7936.7793 8284.7041 -7935.7881 8283.8613 -7935.6406 8283.8613 c-7935.5361 8283.8613 -7935.4297 8283.9658 -7935.3672 8284.1777 c-7933.6592 8290.334 -7928.7822 8291.5576 -7926.3774 8291.5576 c-7926.2729 8291.5576 -7926.1895 8291.6201 -7926.1895 8291.7695 c-7926.1895 8291.8945 -7926.1895 8292.9922 -7926.3359 8292.9922 c-7926.3774 8292.9922 -7926.4414 8292.9697 -7926.5264 8292.9072 c-7927.0942 8292.4434 -7927.3755 8292.085 -7928.3022 8292.085 c-7928.7666 8292.085 -7929.5679 8292.6113 -7929.5679 8293.2236 c-7929.5679 8294.0029 -7928.8936 8294.7207 -7928.4082 8294.7207 c-7928.0498 8294.7207 -7927.9023 8294.6357 -7927.9023 8294.5098 c-7927.9023 8294.3818 -7928.3662 8293.9404 -7928.3662 8293.793 c-7928.3662 8293.5391 -7928.3242 8293.3916 -7927.8809 8293.3916 c-7927.4814 8293.3916 -7926.7842 8293.5615 -7926.3418 8293.8145 c-7925.8774 8294.0879 -7924.7393 8294.7207 -7923.7065 8294.7207 c-7922.9473 8294.7207 -7921.9561 8294.2773 -7921.4702 8293.4766 c-7921.4287 8293.4121 -7921.3862 8293.3916 -7921.3447 8293.3916 c-7921.2393 8293.3916 -7921.1543 8293.4766 -7921.1338 8293.625 c-7921.0913 8294.0234 -7920.7534 8294.7207 -7919.9312 8294.7207 c-7919.3408 8294.7207 -7918.8135 8294.2139 -7918.8135 8293.7705 c-7918.8135 8293.6025 -7918.9194 8293.5391 -7919.0239 8293.5391 c-7919.1094 8293.5391 -7919.4878 8293.793 -7919.5942 8293.793 c-7919.7407 8293.793 -7920.6479 8293.1807 -7920.7334 8293.0332 c-7921.5127 8291.7471 -7921.5977 8291.5996 -7922.2295 8291.3457 c-7922.3984 8291.2617 -7922.3984 8291.1777 -7922.3984 8290.3135 c-7922.3984 8290.1865 -7922.3984 8289.8906 -7922.5454 8289.7227 c-7922.8198 8289.4492 -7924.9287 8287.3818 -7925.1392 8287.3818 c-7925.2241 8287.3818 -7925.4985 8287.6563 -7925.5835 8287.6563 c-7925.6035 8287.6563 -7925.6255 8287.6563 -7925.6255 8287.6143 C-7925.6035 8287.4668 l-7925.6035 8287.2988 -7925.6455 8287.2129 -7925.8564 8287.2129 c-7925.9199 8287.2129 -7926.1943 8287.3398 -7926.2568 8287.3398 c-7926.3198 8287.3398 -7926.3623 8286.8975 -7926.4473 8286.8975 c-7926.4678 8286.8975 -7926.8057 8287.1289 -7926.8896 8287.1289 c-7927.0166 8287.1289 -7927.1006 8287.0449 -7927.1006 8286.9395 c-7927.1006 8286.877 -7927.1006 8286.3916 -7927.2065 8286.3916 c-7927.2915 8286.3916 -7927.5225 8286.6855 -7927.5654 8286.6855 c-7927.5854 8286.6855 -7927.5854 8286.666 -7927.5854 8286.6016 C-7927.5439 8286.1807 l-7927.5439 8286.1162 -7927.5854 8286.0957 -7927.6494 8286.0957 c-7927.7119 8286.0957 -7927.9658 8286.4121 -7928.0498 8286.4121 c-7928.0918 8286.4121 -7928.1138 8286.3701 -7928.1138 8286.2861 c-7928.1138 8286.2441 -7927.9233 8285.5273 -7927.9233 8285.3789 c-7927.9233 8285.2949 -7927.9658 8285.252 -7928.0078 8285.252 c-7928.0918 8285.252 -7928.4297 8285.6113 -7928.4722 8285.6113 c-7928.4927 8285.6113 -7928.4927 8285.6113 -7928.4927 8285.5898 c-7928.4927 8285.5059 -7928.3882 8285.1465 -7928.3882 8285.127 c-7928.3882 8285.1055 -7928.4082 8285.084 -7928.4297 8285.084 c-7928.4722 8285.084 -7928.6826 8285.2949 -7928.7446 8285.2949 c-7928.7666 8285.2949 -7928.7666 8285.2949 -7928.7666 8285.252 c-7928.7666 8285.084 -7928.5137 8284.3457 -7928.5137 8284.2822 c-7928.5137 8284.2607 -7928.5352 8284.2402 -7928.5562 8284.2402 c-7928.6826 8284.2402 -7929.1055 8284.8105 -7929.1465 8284.8105 c-7929.1675 8284.8105 -7929.1675 8284.7891 -7929.1675 8284.7256 c-7929.1675 8284.5352 -7928.8936 8283.6289 y-7928.8936 8283.6074 -7928.9146 8283.5869 -7928.9351 8283.5869 c-7929.0615 8283.5869 -7929.4414 8284.1338 -7929.5049 8284.1338 c-7929.5264 8284.1338 -7929.5264 8284.1338 -7929.5264 8284.0928 c-7929.2729 8283.1855 -7929.2729 8283.1016 v-7929.2729 8282.9961 -7929.3154 8282.9541 -7929.3994 8282.9541 c-7929.4634 8282.9541 -7929.6943 8283.291 -7929.7783 8283.291 c-7929.8218 8283.291 -7929.8418 8283.25 -7929.8418 8283.1855 c-7929.7783 8282.6377 Lf1 D-7934.0386 8281.9004 m-7934.1016 8281.9414 -7934.1865 8281.9629 -7934.2495 8281.9629 c-7934.5874 8281.9629 -7934.6714 8279.96 -7934.6714 8279.7695 c-7934.6714 8279.707 -7934.6289 8279.666 -7934.5654 8279.666 c-7933.4272 8279.666 -7931.5498 8281.627 -7931.5498 8282.0469 c-7931.5498 8282.0898 -7931.5498 8282.1104 -7931.5928 8282.1104 c-7931.6138 8282.1104 -7931.6553 8282.0898 -7931.6982 8282.0684 c-7932.0986 8281.7949 -7932.5215 8281.6895 -7933.1104 8281.6895 c-7933.4902 8281.6895 -7933.7007 8281.752 -7934.0386 8281.9004 cf-7932.3306 8285.8633 m-7931.8882 8286.6855 -7930.8115 8286.6855 -7930.7271 8286.6855 c-7930.5801 8286.6855 -7930.3906 8286.666 -7930.3906 8286.4961 c-7930.3906 8286.3066 -7931.4238 8286.0537 -7931.4238 8285.8633 c-7931.2129 8285.5273 -7931.2129 8285.4424 v-7931.2129 8285.043 -7931.2129 8285 -7931.0225 8285 c-7930.7915 8285 -7929.9897 8285.2949 -7929.7378 8286.0117 c-7929.5474 8286.5391 -7928.5767 8288.2666 -7926.4258 8288.2666 c-7925.5615 8288.2666 -7925.2446 8288.1201 -7925.0977 8288.1201 c-7924.7817 8288.1201 -7922.8418 8290.166 -7922.8198 8290.334 c-7922.7998 8290.4395 -7922.7998 8290.5664 -7922.7998 8290.6719 c-7922.7998 8290.8828 -7922.7998 8291.2832 -7923.1782 8291.5361 c-7923.3896 8291.6631 -7923.4951 8291.916 -7923.4951 8292.168 c-7923.4951 8292.2744 -7923.4951 8292.6328 -7923.2207 8292.6328 c-7922.9473 8292.6328 -7922.9058 8292.4854 -7922.9058 8292.1904 c-7922.9058 8292.002 -7922.7358 8291.8945 -7922.5889 8291.8945 c-7922.4399 8291.8945 -7921.8506 8292.1904 -7921.8506 8292.6113 c-7921.8506 8292.8438 -7922.1455 8293.9189 -7923.4321 8293.9189 c-7924.4014 8293.9189 -7924.4014 8293.793 -7924.4014 8292.3994 c-7924.4014 8291.1357 -7924.3594 8290.7344 -7924.2119 8289.5967 c-7924.1904 8289.5967 -7924.1904 8289.5752 y-7924.1904 8289.4277 -7924.3174 8289.3643 -7924.4233 8289.3643 c-7924.4438 8289.3643 -7924.4648 8289.3848 -7924.4863 8289.3848 c-7924.6118 8289.4063 -7924.9072 8289.7227 -7925.8145 8289.7002 c-7927.7119 8289.7002 -7931.9087 8288.1416 -7933.2793 8285.6533 c-7933.8906 8284.5781 -7934.2705 8283.207 -7934.2705 8282.9541 c-7934.2705 8282.4053 -7933.2578 8282.2373 -7933.0049 8282.2373 c-7931.6553 8282.2373 -7930.2847 8283.9023 -7930.2847 8284.3457 c-7930.2847 8284.3877 -7930.3271 8284.4297 -7930.3486 8284.4297 c-7930.3906 8284.4297 -7930.4326 8284.4092 -7930.4961 8284.3672 c-7930.6431 8284.2197 -7931.2334 8283.5654 -7931.8662 8283.5654 c-7932.5625 8283.5654 -7932.5835 8284.0293 -7932.5835 8284.4512 c-7932.5835 8284.8945 -7932.5415 8285.4629 -7932.3306 8285.8633 cf0 D-7928.5352 8282.5527 m-7928.5352 8282.7002 -7928.5352 8283.0176 -7928.2192 8283.0176 c-7928.1553 8283.0176 -7928.0918 8282.9961 -7928.0278 8282.9121 c-7927.9863 8282.8262 -7927.8608 8282.3848 -7927.7754 8282.3848 c-7927.7334 8282.3848 -7927.7119 8282.4053 -7927.7119 8282.4688 c-7927.7119 8282.7002 -7927.8174 8283.0801 -7927.8174 8283.3135 c-7927.8174 8283.46 -7927.6694 8283.6289 -7927.5225 8283.6289 c-7927.3115 8283.6289 -7927.1855 8283.207 -7927.1226 8282.9961 c-7927.1006 8282.9326 -7927.0586 8282.9121 -7927.0386 8282.9121 c-7927.0166 8282.9326 -7927.0166 8282.9541 V-7927.0386 8283.4814 l-7927.0386 8283.7129 -7927.0386 8283.9023 -7926.8271 8283.9023 c-7926.6782 8283.9023 -7926.4897 8283.1016 -7926.3418 8283.1016 c-7926.3198 8283.1016 -7926.2998 8283.123 -7926.2998 8283.1855 c-7926.2998 8283.25 -7926.3623 8283.5869 -7926.3623 8283.6709 c-7926.3623 8283.8613 -7926.3418 8284.2822 -7926.1104 8284.2822 c-7926.0254 8284.2822 -7925.8774 8283.7969 -7925.7935 8283.7969 c-7925.7729 8283.7969 -7925.7729 8283.8184 -7925.7729 8283.8613 c-7925.7729 8283.9453 -7925.8994 8284.3037 -7925.8994 8284.3877 c-7925.8994 8284.4922 -7925.7935 8284.5996 -7925.7095 8284.5996 c-7925.5835 8284.5996 -7925.3506 8283.9863 -7925.3086 8283.9863 c-7925.2666 8283.9863 -7925.2446 8284.0508 -7925.2446 8284.1143 c-7925.2446 8284.2197 -7925.3926 8284.6406 -7925.3926 8284.7256 c-7925.3926 8284.873 -7925.3286 8284.957 -7925.2666 8284.957 c-7925.1826 8284.957 -7925.0342 8284.5566 -7924.9502 8284.5566 c-7924.9072 8284.5566 -7924.8862 8284.6621 -7924.8862 8284.7256 c-7925.0762 8285.4424 -7925.0762 8285.5898 v-7925.0762 8285.7168 -7925.0342 8285.7578 -7924.9922 8285.7578 c-7924.9072 8285.7578 -7924.7178 8285.2949 -7924.6338 8285.2949 c-7924.5918 8285.2949 -7924.5703 8285.3584 -7924.5703 8285.4424 c-7924.5703 8285.5898 -7924.7817 8286.1602 -7924.7817 8286.2637 c-7924.7817 8286.4121 -7924.7817 8286.6016 -7924.6758 8286.6016 c-7924.6338 8286.6016 -7924.4863 8286.3916 -7924.4438 8286.3916 c-7924.4014 8286.3916 -7924.3809 8286.4336 -7924.3809 8286.4961 c-7924.3809 8286.5596 -7924.5073 8286.8555 -7924.5073 8286.918 c-7924.5073 8287.0449 -7921.9561 8289.7637 -7921.4287 8289.7637 c-7920.9233 8289.7637 -7920.8594 8289.7637 -7920.7744 8289.9551 c-7920.6904 8290.1865 -7920.5854 8290.4189 -7920.1426 8290.6924 c-7919.0039 8291.3242 -7918.8774 8291.4102 -7918.8135 8291.7266 c-7918.7295 8292.2109 -7918.7085 8292.2529 -7918.3926 8292.4639 c-7918.2446 8292.5693 -7918.2026 8292.6748 -7918.2026 8292.8223 c-7918.2026 8293.1807 -7918.2026 8293.2236 -7918.0127 8293.2236 c-7917.7598 8293.2236 -7917.4214 8292.5488 -7917.4214 8292.1904 c-7917.4214 8291.2412 -7917.8018 8291.1357 -7918.4126 8290.9658 c-7918.5615 8290.9248 -7918.7085 8290.8184 -7918.7085 8290.7344 c-7918.7085 8290.6924 -7918.6875 8290.6719 -7918.6455 8290.6504 c-7917.7598 8290.1455 -7917.4214 8289.4492 -7917.4214 8288.8789 c-7917.4214 8288.0781 -7918.7085 8284.3672 -7918.7085 8284.0293 c-7918.7085 8283.5439 -7918.5615 8283.502 -7918.3711 8283.502 c-7918.2241 8283.502 -7917.7178 8284.0293 -7917.5903 8284.0293 c-7917.5073 8284.0293 -7917.4214 8283.9658 -7917.4214 8283.7969 c-7917.4214 8283.5654 -7917.8657 8282.5322 -7918.8984 8282.5322 c-7919.4878 8282.5322 -7919.8682 8283.0586 -7919.8682 8283.5215 c-7919.8682 8284.4727 -7919.5518 8284.6465 -7919.1934 8285.2168 c-7919.1294 8285.3438 -7919.0879 8285.4697 -7919.0879 8285.5762 c-7919.0879 8285.8496 -7919.7202 8285.7705 -7920.0786 8285.7705 c-7920.2256 8285.7705 -7920.3955 8285.7441 -7920.3955 8285.6377 c-7920.3955 8281.0215 -7923.6426 8277.4717 -7927.5225 8276.7334 c-7927.8394 8276.6689 -7927.9863 8276.5439 -7927.9863 8276.418 c-7927.9863 8276.375 -7927.1006 8275.2578 -7925.6255 8275.2578 c-7923.8535 8275.2578 -7922.7153 8276.7334 -7922.7153 8277.4922 c-7922.7153 8277.5762 -7922.7568 8277.6406 -7922.8198 8277.6406 c-7922.9058 8277.6406 -7923.8535 8276.6914 -7924.0854 8276.6914 c-7924.2119 8276.6914 -7924.3174 8276.7969 -7924.3174 8276.9023 c-7924.3174 8277.0293 -7924.2334 8277.1543 -7924.0439 8277.3018 c-7923.9814 8277.3242 -7922.5454 8279.0117 -7922.2515 8279.3486 c-7921.6401 8280.0654 -7920.8594 8280.8447 -7919.6362 8280.8447 c-7918.4561 8280.8447 -7917.4214 8279.6445 -7917.4214 8278.8848 c-7917.4214 8278.1055 -7917.8857 8277.4082 -7918.3711 8277.0078 c-7919.8896 8275.7422 -7919.8896 8275.3633 -7919.8896 8275.1309 c-7919.8896 8274.8145 -7919.6992 8274.6895 -7919.4878 8274.6895 c-7919.1514 8274.6895 -7918.9824 8274.8359 -7918.9824 8275.5098 c-7918.9824 8275.8477 -7918.6455 8276.1855 -7918.2026 8276.1855 c-7917.7598 8276.1855 -7917.4434 8275.8066 -7917.4434 8275.1943 c-7917.4434 8274.584 -7918.2871 8273.8447 -7919.4878 8273.8447 c-7921.1338 8273.8447 -7921.6182 8275.0039 -7921.6182 8275.4893 c-7921.6182 8275.8262 -7921.5127 8276.418 -7921.1958 8276.7754 c-7920.8594 8277.1768 -7920.4595 8277.873 -7920.1846 8278.5898 c-7919.9521 8279.2432 -7919.4258 8279.6016 -7919.0879 8279.6016 c-7919.0239 8279.6016 -7919.0039 8279.5801 -7919.0039 8279.5381 c-7919.0039 8279.4326 -7919.2144 8279.0527 -7919.2144 8278.9688 c-7919.2144 8278.5898 -7919.1094 8278.3789 -7918.8984 8278.3789 c-7918.3711 8278.3789 -7918.2656 8279.0313 -7918.2656 8279.2637 c-7918.2656 8279.75 -7918.6245 8280.3389 -7919.6782 8280.3389 c-7921.0063 8280.3389 -7922.1245 8278.5898 -7922.1245 8278.5264 c-7922.1245 8278.5039 -7922.0825 8277.957 -7922.0825 8277.8506 c-7922.0825 8275.9521 -7923.79 8274.6895 -7925.6255 8274.6895 c-7927.1855 8274.6895 -7928.3447 8275.9121 -7928.5352 8276.2061 c-7928.6401 8276.375 -7928.7666 8276.459 -7928.9146 8276.459 c-7929.2729 8276.459 -7932.1191 8276.3975 -7932.1191 8275.9746 c-7932.1191 8275.9326 -7931.9937 8275.4688 -7931.8242 8275.4688 c-7931.7607 8275.4688 -7931.6982 8275.5098 -7931.6353 8275.5742 c-7931.4438 8275.8066 -7931.0225 8275.9326 -7930.6431 8275.9326 c-7930.0942 8275.9326 -7929.1895 8275.3418 -7929.1895 8274.6045 c-7929.1895 8274.3086 -7929.5679 8273.8242 -7929.8838 8273.8242 c-7930.1377 8273.8242 -7931.1914 8274.541 -7931.4238 8274.541 c-7931.7402 8274.541 -7931.8662 8274.3926 -7932.1606 8274.0557 c-7932.3306 8273.8662 -7932.4575 8273.8447 -7932.6465 8273.8447 c-7932.8154 8273.8447 -7932.9634 8273.9502 -7932.9634 8274.0977 c-7932.9634 8274.2656 -7932.6465 8274.584 -7932.6265 8274.8574 c-7932.6265 8275.0039 -7932.6055 8275.2354 -7932.6055 8275.4258 c-7932.6055 8275.6797 -7932.6265 8276.0381 -7932.8994 8276.0381 c-7933.7217 8276.0381 -7935.7681 8274.752 -7936.6538 8274.1602 c-7937.1592 8273.8242 -7937.2432 8273.8242 -7937.3066 8273.8242 c-7937.4336 8273.8242 -7937.5176 8273.9082 -7937.5176 8274.0557 c-7937.5176 8274.1816 -7935.0713 8276.334 -7932.8994 8277.0703 c-7932.5835 8277.1768 -7932.6055 8277.3242 -7932.5625 8277.4922 c-7932.1406 8279.2432 -7930.5166 8281.416 -7929.9263 8281.416 c-7929.7783 8281.416 -7929.7158 8281.416 -7929.7158 8281.5215 c-7929.7158 8281.7305 -7929.6104 8281.9629 -7929.4634 8281.9629 c-7929.4209 8281.9629 -7929.2524 8281.7305 -7929.21 8281.7305 c-7929.1255 8281.7305 -7929.0615 8282.1953 -7929.0415 8282.2783 c-7928.9995 8282.3848 -7928.9146 8282.4688 -7928.8506 8282.4688 c-7928.7666 8282.4688 -7928.5986 8282.1318 -7928.5352 8282.1318 c-7928.5137 8282.1318 -7928.4927 8282.1514 -7928.4927 8282.1953 c-7928.5352 8282.5527 Lf1 D-7929.9058 8278.041 m-7930.0942 8278.4629 -7930.2002 8278.7158 -7930.2002 8279.0957 c-7930.2002 8279.3486 -7929.7783 8280.5928 y-7929.7783 8280.6563 -7929.7998 8280.6768 -7929.8633 8280.6768 c-7930.2847 8280.6768 -7932.0352 8278.4414 -7932.0352 8277.5762 c-7932.0352 8277.4717 -7931.9722 8277.4082 -7931.8662 8277.4082 c-7931.8042 8277.4082 -7929.8633 8277.5977 -7929.8633 8277.8301 c-7929.8633 8277.8936 -7929.8838 8277.957 -7929.9058 8278.041 cf-7921.8081 8289.0059 m-7922.7568 8288.1201 -7923.6846 8287.2559 -7923.6846 8286.707 c-7923.6846 8286.3701 -7923.6226 8285.9688 -7923.6226 8285.5479 c-7923.6226 8284.0928 -7924.9722 8282.7637 -7925.8774 8282.3008 c-7926.3623 8282.0469 -7926.8481 8281.4785 -7926.8481 8281.1191 c-7926.8481 8281.0137 -7926.8057 8280.9512 -7926.7422 8280.9512 c-7926.6582 8280.9512 -7926.5942 8280.9717 -7926.5103 8280.9717 c-7926.4473 8280.9717 -7926.2158 8280.8447 -7926.1519 8280.8447 c-7926.0049 8280.8447 -7925.6035 8281.5 -7925.4561 8281.5 c-7925.2446 8281.5 -7925.1826 8281.2891 -7925.1826 8281.1406 c-7925.1826 8280.7822 -7925.7305 8279.4326 -7926.9951 8279.4326 c-7927.7554 8279.4326 -7928.0498 8279.875 -7928.0498 8280.2129 c-7928.0498 8280.8447 -7927.5225 8281.457 -7927.3975 8281.627 c-7927.3545 8281.668 -7927.3335 8281.71 -7927.3335 8281.752 c-7927.3335 8281.7949 -7927.3545 8281.8145 -7927.4175 8281.8145 c-7927.6694 8281.8145 -7929.6519 8280.7822 -7929.6519 8279.0527 c-7929.6519 8278.6318 -7929.4209 8277.8301 -7928.7666 8277.8301 c-7926.2998 8277.8301 -7922.1675 8281.6895 -7922.1675 8286.1377 c-7922.1675 8286.5176 -7922.3984 8287.0664 -7922.4614 8287.4453 c-7922.4834 8287.4668 -7922.4834 8287.5088 -7922.4834 8287.5498 c-7922.4834 8287.6768 -7922.4399 8287.8457 -7922.3145 8287.8457 c-7922.0615 8287.8457 -7920.3955 8287.6563 -7920.0366 8287.6563 c-7918.3926 8287.6563 -7917.9702 8287.6563 -7917.9702 8288.752 c-7917.9702 8289.9756 -7919.1094 8290.293 -7919.5098 8290.293 c-7919.8896 8290.293 -7920.2695 8289.9961 -7920.2695 8289.6377 c-7920.2695 8289.5322 -7920.0791 8289.0898 -7920.0791 8289.0059 c-7920.0791 8288.8584 -7920.2065 8288.7744 -7920.3325 8288.7744 c-7920.4795 8288.7744 -7920.9858 8289.2793 -7921.1338 8289.2793 c-7921.3862 8289.2793 -7921.6401 8289.1533 -7921.8081 8289.0059 cf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 7)0 Au1 Ap0 D0 J 0 j 1 w 4 M []0 d0 XR-7921 8299 m-7939 8299 L-7939 8281 L-7921 8281 L-7921 8299 Lnu0 Ap0 O0 0 0 1 k-7921 8290 m-7928.8379 8285.4746 L-7928.8379 8288.5625 L-7939 8288.5625 L-7939 8291.4375 L-7928.8379 8291.4375 L-7928.8379 8294.5264 L-7921 8290 Lf0.15 1 0.9 0.1 k-7925.2939 8288.3857 m-7928.0879 8286.7744 L-7928.0879 8289.3008 L-7939 8289.3008 L-7939 8290.7002 L-7928.0879 8290.7002 L-7928.0879 8293.2266 L-7925.2939 8291.6133 L-7922.5 8290 L-7925.2939 8288.3857 Lf0 1 1 0 k-7927.1675 8289.0918 m-7927.5586 8289.0918 -7927.8896 8289.3408 -7928.0176 8289.6865 C-7939 8289.6865 L-7939 8290.3125 L-7928.0176 8290.3125 L-7927.8896 8290.6602 -7927.5586 8290.9082 -7927.1675 8290.9082 c-7926.6655 8290.9082 -7926.2588 8290.502 -7926.2588 8290 c-7926.2588 8289.499 -7926.6655 8289.0918 -7927.1675 8289.0918 cfUU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Charcoal/ Adobe Art) -(OnPath Brush Tool/ Tapered Stroke/ Adobe ArtOnPath Brush Tool/) -( Floral Spoke/ Adobe PatternOnPath Brush Tool/ Red Arrow Brush) -(/ Adobe PatternOnPath Brush Tool/ Gothic/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Charcoal)(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Floral Spoke)(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Tapered Stroke)(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Gothic)(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Red Arrow Brush)(1 / Unnamed Brush Pat 3/ Unnamed Brush Pat 5/ Unnamed Brush Pa) -(t 5/ Unnamed Brush Pat 7/ Unnamed Brush Pat 2/ 5 0.00392157 0.) -(00392157 0.00784314 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 k(White)Pc0 0 0 1 k(Black)Pc0 1 1 0 k(CMYK Red)Pc0 0 1 0 k(CMYK Yellow)Pc1 0 1 0 k(CMYK Green)Pc1 0 0 0 k(CMYK Cyan)Pc1 1 0 0 k(CMYK Blue)Pc0 1 0 0 k(CMYK Magenta)Pc0.15 1 0.9 0.1 k(C=15 M=100 Y=90 K=10)Pc0 0.9 0.85 0 k(C=0 M=90 Y=85 K=0)Pc0 0.8 0.95 0 k(C=0 M=80 Y=95 K=0)Pc0 0.5 1 0 k(C=0 M=50 Y=100 K=0)Pc0 0.35 0.85 0 k(C=0 M=35 Y=85 K=0)Pc0.05 0 0.9 0 k(C=5 M=0 Y=90 K=0)Pc0.2 0 1 0 k(C=20 M=0 Y=100 K=0)Pc0.5 0 1 0 k(C=50 M=0 Y=100 K=0)Pc0.75 0 1 0 k(C=75 M=0 Y=100 K=0)Pc0.85 0.1 1 0.1 k(C=85 M=10 Y=100 K=10)Pc0.9 0.3 0.95 0.3 k(C=90 M=30 Y=95 K=30)Pc0.75 0 0.75 0 k(C=75 M=0 Y=75 K=0)Pc0.8 0.1 0.45 0 k(C=80 M=10 Y=45 K=0)Pc0.7 0.15 0 0 k(C=70 M=15 Y=0 K=0)Pc0.85 0.5 0 0 k(C=85 M=50 Y=0 K=0)Pc1 0.95 0.05 0 k(C=100 M=95 Y=5 K=0)Pc1 1 0.25 0.25 k(C=100 M=100 Y=25 K=25)Pc0.75 1 0 0 k(C=75 M=100 Y=0 K=0)Pc0.5 1 0 0 k(C=50 M=100 Y=0 K=0)Pc0.35 1 0.35 0.1 k(C=35 M=100 Y=35 K=10)Pc0.1 1 0.5 0 k(C=10 M=100 Y=50 K=0)Pc0 0.95 0.2 0 k(C=0 M=95 Y=20 K=0)Pc0.25 0.25 0.4 0 k(C=25 M=25 Y=40 K=0)Pc0.4 0.45 0.5 0.05 k(C=40 M=45 Y=50 K=5)Pc0.5 0.5 0.6 0.25 k(C=50 M=50 Y=60 K=25)Pc0.55 0.6 0.65 0.4 k(C=55 M=60 Y=65 K=40)Pc0.25 0.4 0.65 0 k(C=25 M=40 Y=65 K=0)Pc0.3 0.5 0.75 0.1 k(C=30 M=50 Y=75 K=10)Pc0.35 0.6 0.8 0.25 k(C=35 M=60 Y=80 K=25)Pc0.4 0.65 0.9 0.35 k(C=40 M=65 Y=90 K=35)Pc0.4 0.7 1 0.5 k(C=40 M=70 Y=100 K=50)Pc0.5 0.7 0.8 0.7 k(C=50 M=70 Y=80 K=70)PcBb2 (Linear Gradient) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Linear Gradient)PcBb2 (Fade to Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade to Black)PcBb0 0 0 0 Bh2 (Radial Gradient) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Radial Gradient)PcBb0 0 0 0 Bh2 (Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Soft Black Vignette)PcBb2 (Desert Sunset) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Desert Sunset)PcBb0 0 0 0 Bh2 (Copper Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Copper Radial)Pc(Fish Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Fish Pattern)Pc0 0 0 1 k(C=0 M=0 Y=0 K=100)Pc0 0 0 0.899994 k(C=0 M=0 Y=0 K=90)Pc0 0 0 0.799988 k(C=0 M=0 Y=0 K=80)Pc0 0 0 0.699997 k(C=0 M=0 Y=0 K=70)Pc0 0 0 0.599991 k(C=0 M=0 Y=0 K=60)Pc0 0 0 0.5 k(C=0 M=0 Y=0 K=50)Pc0 0 0 0.399994 k(C=0 M=0 Y=0 K=40)Pc0 0 0 0.299988 k(C=0 M=0 Y=0 K=30)Pc0 0 0 0.199997 k(C=0 M=0 Y=0 K=20)Pc0 0 0 0.099991 k(C=0 M=0 Y=0 K=10)Pc0 0 0 0.049988 k(C=0 M=0 Y=0 K=5)Pc0 1 1 0 k(C=0 M=100 Y=100 K=0)Pc0 0.75 1 0 k(C=0 M=75 Y=100 K=0)Pc0 0.1 0.95 0 k(C=0 M=10 Y=95 K=0)Pc0.85 0.1 1 0 k(C=85 M=10 Y=100 K=0)Pc1 0.9 0 0 k(C=100 M=90 Y=0 K=0)Pc0.6 0.9 0.000031 0.000031 k(C=60 M=90 Y=0 K=0)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 A0 O0 J 0 j 1 w 4 M []0 d0 XR69.9819 123.8384 m68.9717 131.7358 78.2661 142.2783 89.1821 146.0298 C84.8696 145.1309 80.3872 143.3828 76.2231 140.6187 c61.5991 130.9023 56.2969 110.6338 63.8633 105.0234 c69.8701 100.5664 76.0503 112.7222 86.9736 120.6802 c88.2158 121.5864 89.4453 122.3828 90.647 123.0957 C83.1108 123.0313 70.9565 116.1914 69.9819 123.8384 cBb1 (Unnamed gradient 9) 75.9878 125.8457 -93.5763 21.9018 1 0 0 1 0 0 Bg-1.36619 -21.8592 -37.4328 2.33953 92.7568 124.7979 Xm-501.4509 -8023.3008 -37.4328 2.33953 594.208 8148.0986 Bc-1.36619 -21.8592 -37.4328 2.33953 92.7568 124.7979 Bm-501.4509 -8023.3008 -37.4328 2.33953 91.3906 102.9385 Bcf0 BB96.4204 117.4868 m96.2969 120.1431 95.3462 121.6494 93.874 122.4121 C90.479 120.5146 87.5244 118.3276 85.5386 116.1982 c76.1841 106.1689 78.9639 102.8193 89.0898 99.4395 c95.3535 97.3447 106.9585 96.1162 114.9106 101.1934 C107.6611 97.2275 97.353 97.3242 96.4204 117.4868 cBb1 (Unnamed gradient 12) 79.8184 110.0176 0 35.0923 1 0 0 1 0 0 Bg35.0923 0 0 -30.2959 79.8184 124.4121 Xm8025.4531 0 0 -30.2959 -7945.6348 124.4121 Bc35.0923 0 0 -30.2959 79.8184 124.4121 Bm8025.4531 0 0 -30.2959 114.9106 124.4121 Bcf0 BB121.9277 137.5522 m115.5591 145.9429 104.5088 147.8032 95.939 147.3799 c93.5864 147.2656 91.2275 146.7573 88.9409 145.958 C103.1475 149.021 115.562 142.8193 108.5112 132.8784 c105.6504 128.8477 98.7383 127.8955 90.6172 123.0688 C91.8647 123.0688 92.9858 122.8877 93.9004 122.4126 C102.4478 127.1826 113.8018 130.1167 119.6543 125.6968 c126.1865 120.7656 124.1294 111.2319 119.1455 104.9385 c117.9365 103.4111 116.5 102.1914 114.936 101.1953 C115.2764 101.3818 115.6133 101.5732 115.937 101.7744 c129.3774 110.1362 128.4629 128.9478 121.9277 137.5522 cBb1 (Unnamed gradient 52) 118.1875 107.728 117.5283 31.7671 1 0 0 1 0 0 Bg-14.6823 28.1705 35.7177 18.6159 101.021 98.7813 Xm-3727.2935 7151.4395 35.7177 18.6159 3828.3145 -7052.6582 Bc-14.6823 28.1705 35.7177 18.6159 101.021 98.7813 Bm-3727.2935 7151.4395 35.7177 18.6159 86.3389 126.9517 Bcf0 BB89.042 146.0005 m78.1245 142.2485 68.8311 131.7041 69.8403 123.8096 c70.8164 116.1626 82.9727 123.001 90.5034 123.0645 C98.624 127.8921 105.5381 128.8457 108.3979 132.877 c115.4136 142.7661 103.1577 148.957 89.042 146.0005 CBb1 (Unnamed gradient 8) 72.9834 124.3652 30.1705 37.2457 1 0 0 1 0 0 Bg32.2001 18.7187 14.7582 -25.3872 65.5068 137.2271 Xm6934.4072 4031.1426 14.7582 -25.3872 -6868.9004 -3893.916 Bc32.2001 18.7187 14.7582 -25.3872 65.5068 137.2271 Bm6934.4072 4031.1426 14.7582 -25.3872 97.707 155.9458 Bcf0 BB119.625 125.6958 m113.7729 130.1152 102.4175 127.1826 93.873 122.4121 C95.3428 121.6494 96.2944 120.147 96.4175 117.4868 c97.3491 97.3262 107.6587 97.2275 114.9053 101.1934 C116.4717 102.1895 117.9067 103.4092 119.1191 104.9365 c124.103 111.228 126.1563 120.7656 119.625 125.6958 cBb1 (Unnamed gradient 12) 99.8594 119.1172 -27.5688 24.7274 1 0 0 1 0 0 Bg21.9198 -11.4442 -18.8213 -36.0497 108.2773 135.2407 Xm7134.8081 -3725.0422 -18.8213 -36.0497 -7026.5308 3860.2832 Bc21.9198 -11.4442 -18.8213 -36.0497 108.2773 135.2407 Bm7134.8081 -3725.0422 -18.8213 -36.0497 130.1973 123.7964 Bcf0 BBu*u0.746094 0.675781 0.667969 0.898438 k142.1382 86.0254 m144.249 86.0254 L144.249 75.6484 L150.564 75.6484 L150.564 73.6738 L142.1382 73.6738 L142.1382 86.0254 lf*U*u158.061 73.6738 m158.061 74.8213 L157.4453 74.0635 156.5005 73.4785 155.1274 73.4785 c153.4111 73.4785 151.9004 74.4854 151.9004 76.3555 c151.9004 76.3906 L151.9004 78.4014 153.4619 79.3906 155.5737 79.3906 c156.6714 79.3906 157.3755 79.2324 158.0801 79.0029 c158.0801 79.2324 L158.0801 80.5215 157.29 81.2266 155.8477 81.2266 c154.8369 81.2266 154.0791 80.998 153.2563 80.6436 c152.6904 82.3555 L153.6855 82.8135 154.6646 83.1338 156.1392 83.1338 c158.8184 83.1338 160.1216 81.6855 160.1216 79.1963 c160.1216 73.6738 L158.061 73.6738 lf1 D158.1143 77.627 m157.5815 77.8379 156.8438 77.998 156.0376 77.998 c154.731 77.998 153.9604 77.4502 153.9604 76.498 c153.9604 76.4609 L153.9604 75.5801 154.731 75.0859 155.7104 75.0859 c157.0845 75.0859 158.1143 75.8779 158.1143 77.0439 C158.1143 77.627 lf*U*u0 D168.5454 82.9922 m170.6221 82.9922 L170.6221 73.6738 L168.5454 73.6738 L168.5454 75.1211 L167.9624 74.2373 167.123 73.4785 165.7134 73.4785 c163.6719 73.4785 162.4893 74.8916 162.4893 77.0625 c162.4893 82.9922 L164.5649 82.9922 L164.5649 77.6963 L164.5649 76.25 165.2676 75.4199 166.5044 75.4199 c167.7041 75.4199 168.5454 76.2842 168.5454 77.7324 C168.5454 82.9922 lf*U*u175.3076 73.6738 m173.2275 73.6738 L173.2275 82.9922 L175.3076 82.9922 L175.3076 80.8916 L175.8711 82.2852 176.9194 83.2373 178.5142 83.168 c178.5142 80.9082 L178.394 80.9082 L176.5757 80.9082 175.3076 79.6904 175.3076 77.2207 C175.3076 73.6738 lf*U*u184.1934 75.208 m185.2061 75.208 185.9272 75.5967 186.647 76.3203 c187.8657 75.208 L187.0083 74.1494 185.8237 73.4629 184.1592 73.4629 c181.5322 73.4629 179.5093 75.4199 179.5093 78.3145 c179.5093 80.998 181.3438 83.1855 183.9346 83.1855 c186.8198 83.1855 188.2754 80.8564 188.2754 78.1572 c188.2754 77.9609 188.2607 77.7852 188.2441 77.5742 c181.585 77.5742 l181.8252 76.0566 182.855 75.208 184.1934 75.208 cf1 D186.2173 78.9854 m186.0801 80.3613 185.2915 81.4365 183.9185 81.4365 c182.6479 81.4365 181.7559 80.4326 181.5693 78.9854 C186.2173 78.9854 lf*U*u0 D195.9131 73.6738 m195.9131 74.8213 L195.2954 74.0635 194.3516 73.4785 192.978 73.4785 c191.2617 73.4785 189.7515 74.4854 189.7515 76.3555 c189.7515 76.3906 L189.7515 78.4014 191.3135 79.3906 193.4248 79.3906 c194.5215 79.3906 195.2261 79.2324 195.9302 79.0029 c195.9302 79.2324 L195.9302 80.5215 195.1401 81.2266 193.6987 81.2266 c192.6875 81.2266 191.9312 80.998 191.1064 80.6436 c190.5405 82.3555 L191.5366 82.8135 192.5146 83.1338 193.9902 83.1338 c196.668 83.1338 197.9702 81.6855 197.9702 79.1963 c197.9702 73.6738 L195.9131 73.6738 lf1 D195.9644 77.627 m195.4326 77.8379 194.6943 77.998 193.8872 77.998 c192.583 77.998 191.812 77.4502 191.812 76.498 c191.812 76.4609 L191.812 75.5801 192.583 75.0859 193.5615 75.0859 c194.9341 75.0859 195.9644 75.8779 195.9644 77.0439 C195.9644 77.627 lf*U*u0 D202.8589 76.585 m202.8589 75.7568 203.272 75.4199 203.9746 75.4199 c204.4385 75.4199 204.8501 75.5264 205.2632 75.7383 c205.2632 73.9912 L204.7461 73.6914 204.1631 73.5146 203.3921 73.5146 c201.8623 73.5146 200.7837 74.2031 200.7837 76.25 c200.7837 81.1553 L199.6338 81.1553 L199.6338 82.9922 L200.7837 82.9922 L200.7837 85.5488 L202.8589 85.5488 L202.8589 82.9922 L205.2959 82.9922 L205.2959 81.1553 L202.8589 81.1553 L202.8589 76.585 lf*U*u211.3164 75.208 m212.3296 75.208 213.0508 75.5967 213.7715 76.3203 c214.9873 75.208 L214.1304 74.1494 212.9463 73.4629 211.2837 73.4629 c208.6572 73.4629 206.6318 75.4199 206.6318 78.3145 c206.6318 80.998 208.4678 83.1855 211.0591 83.1855 c213.9414 83.1855 215.4014 80.8564 215.4014 78.1572 c215.4014 77.9609 215.3823 77.7852 215.3657 77.5742 c208.707 77.5742 l208.9482 76.0566 209.9785 75.208 211.3164 75.208 cf1 D213.3428 78.9854 m213.2036 80.3613 212.416 81.4365 211.0425 81.4365 c209.772 81.4365 208.8799 80.4326 208.6899 78.9854 C213.3428 78.9854 lf*U*u0 D225.1118 86.0254 m225.1118 73.6738 L223.0005 73.6738 L223.0005 86.0254 L225.1118 86.0254 lf*U*u230.1567 73.6738 m228.0786 73.6738 L228.0786 82.9922 L230.1567 82.9922 L230.1567 81.5449 L230.7393 82.4268 231.5791 83.1855 232.9893 83.1855 c235.0288 83.1855 236.2148 81.7725 236.2148 79.6016 c236.2148 73.6738 L234.1387 73.6738 L234.1387 78.9678 L234.1387 80.4141 233.4331 81.2441 232.1992 81.2441 c230.9961 81.2441 230.1567 80.3809 230.1567 78.9326 C230.1567 73.6738 lf*U*u241.8242 73.4971 m240.5356 73.4971 239.1118 73.9746 237.9805 74.8916 c238.9063 76.3379 L239.8848 75.5801 240.9478 75.1904 241.8745 75.1904 c242.7671 75.1904 243.2827 75.5801 243.2827 76.1982 c243.2827 76.2324 L243.2827 76.9561 242.3218 77.2031 241.2568 77.5391 c239.9189 77.9258 238.4268 78.4912 238.4268 80.2725 c238.4268 80.3096 L238.4268 82.0732 239.8506 83.1494 241.6528 83.1494 c242.7842 83.1494 244.02 82.7441 244.9814 82.0918 c244.1587 80.5732 L243.2827 81.1211 242.3564 81.457 241.6001 81.457 c240.7935 81.457 240.3311 81.0684 240.3311 80.5215 c240.3311 80.4854 L240.3311 79.8154 241.3105 79.5322 242.374 79.1807 c243.6958 78.7559 245.188 78.1377 245.188 76.4609 c245.188 76.4268 l245.188 74.4668 243.7109 73.4971 241.8242 73.4971 cf*U*u249.6309 76.585 m249.6309 75.7568 250.043 75.4199 250.7451 75.4199 c251.2095 75.4199 251.6216 75.5264 252.0337 75.7383 c252.0337 73.9912 L251.519 73.6914 250.937 73.5146 250.1636 73.5146 c248.6362 73.5146 247.5566 74.2031 247.5566 76.25 c247.5566 81.1553 L246.4048 81.1553 L246.4048 82.9922 L247.5566 82.9922 L247.5566 85.5488 L249.6309 85.5488 L249.6309 82.9922 L252.0674 82.9922 L252.0674 81.1553 L249.6309 81.1553 L249.6309 76.585 lf*U*u254.1953 84.4199 m254.1953 86.4492 L256.4248 86.4492 L256.4248 84.4199 L254.1953 84.4199 lf254.2803 73.6738 m254.2803 82.9922 L256.3564 82.9922 L256.3564 73.6738 L254.2803 73.6738 lf*U*u261.5742 76.585 m261.5742 75.7568 261.9854 75.4199 262.6885 75.4199 c263.1533 75.4199 263.5654 75.5264 263.9766 75.7383 c263.9766 73.9912 L263.4609 73.6914 262.8789 73.5146 262.1045 73.5146 c260.5791 73.5146 259.499 74.2031 259.499 76.25 c259.499 81.1553 L258.3477 81.1553 L258.3477 82.9922 L259.499 82.9922 L259.499 85.5488 L261.5742 85.5488 L261.5742 82.9922 L264.0107 82.9922 L264.0107 81.1553 L261.5742 81.1553 L261.5742 76.585 lf*U*u272.0586 82.9922 m274.1348 82.9922 L274.1348 73.6738 L272.0586 73.6738 L272.0586 75.1211 L271.4727 74.2373 270.6328 73.4785 269.2275 73.4785 c267.1865 73.4785 265.999 74.8916 265.999 77.0625 c265.999 82.9922 L268.0762 82.9922 L268.0762 77.6963 L268.0762 76.25 268.7803 75.4199 270.0166 75.4199 c271.2178 75.4199 272.0586 76.2842 272.0586 77.7324 C272.0586 82.9922 lf*U*u279.2471 76.585 m279.2471 75.7568 279.6582 75.4199 280.3623 75.4199 c280.8232 75.4199 281.2363 75.5264 281.6523 75.7383 c281.6523 73.9912 L281.1348 73.6914 280.5498 73.5146 279.7793 73.5146 c278.252 73.5146 277.1699 74.2031 277.1699 76.25 c277.1699 81.1553 L276.0205 81.1553 L276.0205 82.9922 L277.1699 82.9922 L277.1699 85.5488 L279.2471 85.5488 L279.2471 82.9922 L281.6836 82.9922 L281.6836 81.1553 L279.2471 81.1553 L279.2471 76.585 lf*U*u287.7041 75.208 m288.7168 75.208 289.4385 75.5967 290.1592 76.3203 c291.376 75.208 L290.5176 74.1494 289.332 73.4629 287.6699 73.4629 c285.0439 73.4629 283.0186 75.4199 283.0186 78.3145 c283.0186 80.998 284.8564 83.1855 287.4482 83.1855 c290.3291 83.1855 291.7881 80.8564 291.7881 78.1572 c291.7881 77.9609 291.7734 77.7852 291.7549 77.5742 c285.0967 77.5742 l285.3369 76.0566 286.3652 75.208 287.7041 75.208 cf1 D289.7295 78.9854 m289.5908 80.3613 288.8018 81.4365 287.4277 81.4365 c286.1602 81.4365 285.2676 80.4326 285.0801 78.9854 C289.7295 78.9854 lf*U*u0 D303.9365 82.9209 m303.9365 81.1553 L301.5674 81.1553 L301.5674 73.6738 L299.4922 73.6738 L299.4922 81.1553 L298.3418 81.1553 L298.3418 82.9375 L299.4922 82.9375 L299.4922 83.6084 L299.4922 85.6572 300.4863 86.6611 302.2715 86.6611 c302.9922 86.6611 303.4893 86.5557 303.9512 86.4141 c303.9512 84.6152 L303.54 84.7568 303.1816 84.8447 302.7344 84.8447 c301.9463 84.8447 301.5342 84.4023 301.5342 83.4326 c301.5342 82.9209 L303.9365 82.9209 lf*U*u309.6162 73.4629 m306.8506 73.4629 304.8096 75.6318 304.8096 78.2969 c304.8096 80.9785 306.8691 83.1855 309.6494 83.1855 c312.4297 83.1855 314.4746 81.0146 314.4746 78.332 c314.4746 75.666 312.4121 73.4629 309.6162 73.4629 cf1 D309.6162 81.3145 m307.9502 81.3145 306.8867 79.9736 306.8867 78.332 c306.8867 76.6748 308.0371 75.3154 309.6494 75.3154 c311.3301 75.3154 312.3955 76.6572 312.3955 78.2969 c312.3955 79.9561 311.2461 81.3145 309.6162 81.3145 cf*U*u0 D318.6572 73.6738 m316.5801 73.6738 L316.5801 82.9922 L318.6572 82.9922 L318.6572 80.8916 L319.2207 82.2852 320.2705 83.2373 321.8672 83.168 c321.8672 80.9082 L321.748 80.9082 L319.9268 80.9082 318.6572 79.6904 318.6572 77.2207 C318.6572 73.6738 lf*U*u338.3916 82.8682 m338.3916 81.3506 337.5684 80.5732 336.6748 80.0986 c338.083 79.6016 339.0586 78.7744 339.0586 77.0791 c339.0586 74.8564 337.292 73.6738 334.6133 73.6738 c329.0547 73.6738 L329.0547 86.0254 L334.4434 86.0254 l336.8633 86.0254 338.3916 84.8105 338.3916 82.8682 cf1 D336.2783 82.5146 m336.2783 83.5195 335.5225 84.1025 334.1699 84.1025 c331.1328 84.1025 L331.1328 80.8213 L334.0146 80.8213 l335.3721 80.8213 336.2783 81.3682 336.2783 82.5146 cf336.9492 77.3096 m336.9492 78.3682 336.1406 78.9854 334.4775 78.9854 c331.1328 78.9854 L331.1328 75.5967 L334.6357 75.5967 l336.0742 75.5967 336.9492 76.1787 336.9492 77.3096 cf*U*u0 D343.2793 73.6738 m341.2041 73.6738 L341.2041 82.9922 L343.2793 82.9922 L343.2793 80.8916 L343.8467 82.2852 344.8936 83.2373 346.4893 83.168 c346.4893 80.9082 L346.3672 80.9082 L344.5488 80.9082 343.2793 79.6904 343.2793 77.2207 C343.2793 73.6738 lf*U*u353.4023 73.6738 m353.4023 74.8213 L352.7832 74.0635 351.8389 73.4785 350.4668 73.4785 c348.75 73.4785 347.2393 74.4854 347.2393 76.3555 c347.2393 76.3906 L347.2393 78.4014 348.8018 79.3906 350.9131 79.3906 c352.0098 79.3906 352.7158 79.2324 353.418 79.0029 c353.418 79.2324 L353.418 80.5215 352.6299 81.2266 351.1865 81.2266 c350.1758 81.2266 349.418 80.998 348.5967 80.6436 c348.0313 82.3555 L349.0264 82.8135 350.002 83.1338 351.4795 83.1338 c354.1582 83.1338 355.4609 81.6855 355.4609 79.1963 c355.4609 73.6738 L353.4023 73.6738 lf1 D353.4541 77.627 m352.9209 77.8379 352.1826 77.998 351.377 77.998 c350.0713 77.998 349.2998 77.4502 349.2998 76.498 c349.2998 76.4609 L349.2998 75.5801 350.0713 75.0859 351.0508 75.0859 c352.4229 75.0859 353.4541 75.8779 353.4541 77.0439 C353.4541 77.627 lf*U*u0 D357.9629 84.4199 m357.9629 86.4492 L360.1953 86.4492 L360.1953 84.4199 L357.9629 84.4199 lf358.0498 73.6738 m358.0498 82.9922 L360.1279 82.9922 L360.1279 73.6738 L358.0498 73.6738 lf*U*u364.915 73.6738 m362.8359 73.6738 L362.8359 82.9922 L364.915 82.9922 L364.915 81.5449 L365.4971 82.4268 366.3389 83.1855 367.7451 83.1855 c369.7881 83.1855 370.9736 81.7725 370.9736 79.6016 c370.9736 73.6738 L368.8955 73.6738 L368.8955 78.9678 L368.8955 80.4141 368.1934 81.2441 366.958 81.2441 c365.7539 81.2441 364.915 80.3809 364.915 78.9326 C364.915 73.6738 lf*U*u386.5703 73.6738 m383.6182 77.9814 L380.9766 77.9814 L380.9766 73.6738 L378.8643 73.6738 L378.8643 86.0254 L384.2178 86.0254 L386.9814 86.0254 388.6807 84.5264 388.6807 82.1084 c388.6807 80.0605 387.4951 78.8262 385.8145 78.3496 c389.0566 73.6738 L386.5703 73.6738 lf1 D384.0488 84.0508 m380.9766 84.0508 L380.9766 79.9023 L384.0635 79.9023 L385.5742 79.9023 386.5371 80.7139 386.5371 81.9863 c386.5371 83.3447 385.6084 84.0508 384.0488 84.0508 cf*U*u0 D395.0459 75.208 m396.0576 75.208 396.7793 75.5967 397.5 76.3203 c398.7178 75.208 L397.8604 74.1494 396.6768 73.4629 395.0117 73.4629 c392.3838 73.4629 390.3604 75.4199 390.3604 78.3145 c390.3604 80.998 392.1963 83.1855 394.7891 83.1855 c397.6699 83.1855 399.1289 80.8564 399.1289 78.1572 c399.1289 77.9609 399.1143 77.7852 399.0947 77.5742 c392.4365 77.5742 l392.6768 76.0566 393.7051 75.208 395.0459 75.208 cf1 D397.0693 78.9854 m396.9326 80.3613 396.1436 81.4365 394.7705 81.4365 c393.501 81.4365 392.6074 80.4326 392.4209 78.9854 C397.0693 78.9854 lf*U*u0 D404.3271 73.4971 m403.04 73.4971 401.6172 73.9746 400.4844 74.8916 c401.4092 76.3379 L402.3887 75.5801 403.4512 75.1904 404.3799 75.1904 c405.2705 75.1904 405.7871 75.5801 405.7871 76.1982 c405.7871 76.2324 L405.7871 76.9561 404.8262 77.2031 403.7627 77.5391 c402.4229 77.9258 400.9297 78.4912 400.9297 80.2725 c400.9297 80.3096 L400.9297 82.0732 402.3535 83.1494 404.1572 83.1494 c405.2881 83.1494 406.5254 82.7441 407.4854 82.0918 c406.6621 80.5732 L405.7871 81.1211 404.8594 81.457 404.1045 81.457 c403.2979 81.457 402.834 81.0684 402.834 80.5215 c402.834 80.4854 L402.834 79.8154 403.8135 79.5322 404.877 79.1807 c406.1963 78.7559 407.6914 78.1377 407.6914 76.4609 c407.6914 76.4268 l407.6914 74.4668 406.2158 73.4971 404.3271 73.4971 cf*U*u413.9883 75.208 m415 75.208 415.7217 75.5967 416.4443 76.3203 c417.6602 75.208 L416.8027 74.1494 415.6182 73.4629 413.9531 73.4629 c411.3291 73.4629 409.3037 75.4199 409.3037 78.3145 c409.3037 80.998 411.1406 83.1855 413.7324 83.1855 c416.6143 83.1855 418.0723 80.8564 418.0723 78.1572 c418.0723 77.9609 418.0547 77.7852 418.0381 77.5742 c411.3799 77.5742 l411.6191 76.0566 412.6494 75.208 413.9883 75.208 cf1 D416.0127 78.9854 m415.875 80.3613 415.0869 81.4365 413.7129 81.4365 c412.4434 81.4365 411.5527 80.4326 411.3623 78.9854 C416.0127 78.9854 lf*U*u0 D425.708 73.6738 m425.708 74.8213 L425.0908 74.0635 424.1475 73.4785 422.7725 73.4785 c421.0586 73.4785 419.5469 74.4854 419.5469 76.3555 c419.5469 76.3906 L419.5469 78.4014 421.1094 79.3906 423.2188 79.3906 c424.3174 79.3906 425.0215 79.2324 425.7236 79.0029 c425.7236 79.2324 L425.7236 80.5215 424.9365 81.2266 423.4951 81.2266 c422.4814 81.2266 421.7295 80.998 420.9014 80.6436 c420.3369 82.3555 L421.332 82.8135 422.3115 83.1338 423.7861 83.1338 c426.4629 83.1338 427.7676 81.6855 427.7676 79.1963 c427.7676 73.6738 L425.708 73.6738 lf1 D425.7588 77.627 m425.2275 77.8379 424.4922 77.998 423.6836 77.998 c422.3779 77.998 421.6055 77.4502 421.6055 76.498 c421.6055 76.4609 L421.6055 75.5801 422.3779 75.0859 423.3564 75.0859 c424.7295 75.0859 425.7588 75.8779 425.7588 77.0439 C425.7588 77.627 lf*U*u0 D432.3125 73.6738 m430.2383 73.6738 L430.2383 82.9922 L432.3125 82.9922 L432.3125 80.8916 L432.8818 82.2852 433.9277 83.2373 435.5225 83.168 c435.5225 80.9082 L435.4014 80.9082 L433.585 80.9082 432.3125 79.6904 432.3125 77.2207 C432.3125 73.6738 lf*U*u441.2021 73.4629 m438.5068 73.4629 436.5166 75.6318 436.5166 78.2969 c436.5166 80.9629 438.5068 83.1855 441.2178 83.1855 c442.9355 83.1855 443.9971 82.5322 444.8408 81.5801 c443.5518 80.1504 L442.915 80.8389 442.2461 81.3145 441.2021 81.3145 c439.6914 81.3145 438.5938 79.9736 438.5938 78.332 c438.5938 76.6572 439.709 75.3154 441.3027 75.3154 c442.2813 75.3154 443.0029 75.79 443.6553 76.4795 c444.9072 75.208 l444.0146 74.1855 442.9678 73.4629 441.2021 73.4629 cf*U*u448.8867 73.6738 m446.8105 73.6738 L446.8105 86.5557 L448.8867 86.5557 L448.8867 81.5449 L449.4717 82.4268 450.3125 83.1855 451.7197 83.1855 c453.7607 83.1855 454.9463 81.7725 454.9463 79.6016 c454.9463 73.6738 L452.8701 73.6738 L452.8701 78.9678 L452.8701 80.4141 452.166 81.2441 450.9316 81.2441 c449.7275 81.2441 448.8867 80.3809 448.8867 78.9326 C448.8867 73.6738 lf*UU*u1 D180.5938 146.5693 m180.5938 98.8506 L195.5156 98.8506 L195.5156 146.6074 L180.5938 146.5693 Lf156.6851 146.5693 m142.041 146.5693 L142.041 98.8506 L175.3218 98.8506 L175.3218 109.9248 L156.6851 109.9248 L156.6851 146.5693 Lfu289.6748 98.9248 m289.3203 99.2793 288.9922 99.9268 288.3643 101.1455 c287.9961 101.8584 279.2168 119.686 Y284.5781 121.6104 287.5352 126.1465 287.5352 132.6138 c287.5352 141.9624 281.2793 146.5693 268.835 146.5693 C245.5249 146.5693 L245.5249 98.8506 L260.0342 98.8506 L260.0342 116.9346 L265.0508 116.9346 L271.0977 102.999 271.4961 102.1846 v271.8564 101.4385 272.3379 100.5664 273.6074 99.6475 c275.1084 98.5605 277.1416 98.6191 Y289.5928 98.5977 L290.0205 98.5791 289.6748 98.9248 vf0 D266.9805 127.0415 m260.0342 127.0415 L260.0342 136.3911 L266.7725 136.3911 L270.7578 136.3911 272.7539 134.8799 272.7539 131.7192 c272.7539 129.104 270.5566 127.0415 266.9805 127.0415 CfUu1 D232.5151 123.5361 m237.8096 124.9087 240.6279 128.6929 240.6279 134.1938 c240.6279 138.0439 239.1128 141.4116 236.5034 143.5435 c233.2026 146.2925 229.6279 146.5693 225.0171 146.5693 C201.8477 146.5693 L201.8477 98.917 L213.6162 98.6162 225.0894 98.8506 v236.562 99.0879 241.7969 103.46 241.7969 112.123 c241.7969 118.3101 238.6348 122.2319 232.5151 123.5361 Cf0 D215.3926 136.2559 m222.3384 136.2559 L225.2261 136.2559 226.9463 134.8135 226.9463 132.2661 c226.9463 129.7246 225.2261 128.2778 222.3384 128.2778 C215.3926 128.2778 L215.3926 136.2559 Lf222.5415 109.3701 m215.3926 109.3701 L215.3926 118.1021 L222.5415 118.1021 L225.7759 118.1021 227.7002 116.4521 227.7002 113.7041 c227.7002 110.9531 225.7759 109.3701 222.5415 109.3701 CfU*ULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF